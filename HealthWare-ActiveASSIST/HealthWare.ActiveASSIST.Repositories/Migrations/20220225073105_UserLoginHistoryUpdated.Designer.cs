// <auto-generated />
using System;
using HealthWare.ActiveASSIST.Repositories.Base.Connection;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthWare.ActiveASSIST.Repositories.Migrations
{
    [DbContext(typeof(PatientDbContext))]
    [Migration("20220225073105_UserLoginHistoryUpdated")]
    partial class UserLoginHistoryUpdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HealthWare.ActiveASSIST.DTOs.AssessmentResult", b =>
                {
                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OptionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionKeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuestionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int");

                    b.Property<string>("ScreenQuestionMappingId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AssessmentResult");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.DTOs.AssessmentSummaryResult", b =>
                {
                    b.Property<string>("AnswerOptionValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AssessmentSummaryResult");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.DTOs.DashboardAssessment", b =>
                {
                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("AssessmentPatientId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssessmentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Programs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedOn")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DashboardAssessment");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AnswerOptionId")
                        .HasColumnType("bigint");

                    b.Property<long>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ScreenQuestionMappingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.AnswerOption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AnswerOption");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "myself",
                            Order = 1,
                            QuestionId = 1L,
                            Value = "Myself"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "other",
                            Order = 2,
                            QuestionId = 1L,
                            Value = "Relative/Friend/Other"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "usCitizen",
                            Order = 1,
                            QuestionId = 5L,
                            Value = "U.S. Citizen"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "legalResident",
                            Order = 2,
                            QuestionId = 5L,
                            Value = "Legal Resident"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "undocumented",
                            Order = 3,
                            QuestionId = 5L,
                            Value = "Undocumented"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "unknown",
                            Order = 4,
                            QuestionId = 5L,
                            Value = "Unknown"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "M",
                            Order = 1,
                            QuestionId = 10L,
                            Value = "Male"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "F",
                            Order = 2,
                            QuestionId = 10L,
                            Value = "Female"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "U",
                            Order = 3,
                            QuestionId = 10L,
                            Value = "Unreported or Unknown"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "A",
                            Order = 1,
                            QuestionId = 11L,
                            Value = "Separated"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "D",
                            Order = 2,
                            QuestionId = 11L,
                            Value = "Divorced"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "M",
                            Order = 3,
                            QuestionId = 11L,
                            Value = "Married"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "P",
                            Order = 4,
                            QuestionId = 11L,
                            Value = "Domestic partner"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "S",
                            Order = 5,
                            QuestionId = 11L,
                            Value = "Single"
                        },
                        new
                        {
                            Id = 15L,
                            Name = "T",
                            Order = 6,
                            QuestionId = 11L,
                            Value = "Unreported"
                        },
                        new
                        {
                            Id = 16L,
                            Name = "U",
                            Order = 7,
                            QuestionId = 11L,
                            Value = "Unknown"
                        },
                        new
                        {
                            Id = 17L,
                            Name = "W",
                            Order = 8,
                            QuestionId = 11L,
                            Value = "Widowed"
                        },
                        new
                        {
                            Id = 18L,
                            Name = "+1",
                            Order = 1,
                            QuestionId = 13L,
                            Value = "United States"
                        },
                        new
                        {
                            Id = 19L,
                            Name = "+91",
                            Order = 2,
                            QuestionId = 13L,
                            Value = "India"
                        },
                        new
                        {
                            Id = 20L,
                            Order = 1,
                            QuestionId = 14L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 21L,
                            Order = 2,
                            QuestionId = 14L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 22L,
                            Order = 1,
                            QuestionId = 25L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 23L,
                            Order = 2,
                            QuestionId = 25L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 24L,
                            Order = 1,
                            QuestionId = 26L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 25L,
                            Order = 2,
                            QuestionId = 26L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 26L,
                            Name = "calFresh",
                            Order = 1,
                            QuestionId = 27L,
                            Value = "CalFresh (Food Stamps)"
                        },
                        new
                        {
                            Id = 27L,
                            Name = "ssi",
                            Order = 2,
                            QuestionId = 27L,
                            Value = "SSI / SSP"
                        },
                        new
                        {
                            Id = 28L,
                            Name = "calWorks",
                            Order = 3,
                            QuestionId = 27L,
                            Value = "CalWorks"
                        },
                        new
                        {
                            Id = 29L,
                            Name = "refugeeAssisstance",
                            Order = 4,
                            QuestionId = 27L,
                            Value = "Refugee Assistance"
                        },
                        new
                        {
                            Id = 30L,
                            Name = "allOfTheAbove",
                            Order = 5,
                            QuestionId = 27L,
                            Value = "All of the above"
                        },
                        new
                        {
                            Id = 31L,
                            Name = "yearly",
                            Order = 1,
                            QuestionId = 30L,
                            Value = "Yearly"
                        },
                        new
                        {
                            Id = 32L,
                            Name = "monthly",
                            Order = 2,
                            QuestionId = 30L,
                            Value = "Monthly"
                        },
                        new
                        {
                            Id = 33L,
                            Name = "bimonthly",
                            Order = 3,
                            QuestionId = 30L,
                            Value = "Bimonthly"
                        },
                        new
                        {
                            Id = 34L,
                            Name = "biweekly",
                            Order = 4,
                            QuestionId = 30L,
                            Value = "Biweekly"
                        },
                        new
                        {
                            Id = 35L,
                            Name = "weekly",
                            Order = 5,
                            QuestionId = 30L,
                            Value = "Weekly"
                        },
                        new
                        {
                            Id = 36L,
                            Name = "pregnantNow",
                            Order = 1,
                            QuestionId = 32L,
                            Value = "Pregnant now / in past 6 months"
                        },
                        new
                        {
                            Id = 37L,
                            Name = "veteran",
                            Order = 2,
                            QuestionId = 32L,
                            Value = "Veteran"
                        },
                        new
                        {
                            Id = 38L,
                            Name = "memberOfIndianTribe",
                            Order = 3,
                            QuestionId = 32L,
                            Value = "Member of Indian tribe"
                        },
                        new
                        {
                            Id = 39L,
                            Name = "formerFosterYouth",
                            Order = 4,
                            QuestionId = 32L,
                            Value = "Former Foster Youth"
                        },
                        new
                        {
                            Id = 40L,
                            Name = "deemed",
                            Order = 1,
                            QuestionId = 33L,
                            Value = "Deemed as disabled for 12 months or longer"
                        },
                        new
                        {
                            Id = 41L,
                            Name = "you/member",
                            Order = 2,
                            QuestionId = 33L,
                            Value = "You/member of your family been declared legally blind"
                        },
                        new
                        {
                            Id = 42L,
                            Name = "inCrime",
                            Order = 1,
                            QuestionId = 34L,
                            Value = "In crime related violence (as a victim)"
                        },
                        new
                        {
                            Id = 43L,
                            Name = "inMotorVehicle",
                            Order = 2,
                            QuestionId = 34L,
                            Value = "In motor vehicle accident"
                        },
                        new
                        {
                            Id = 44L,
                            Name = "onTheJob",
                            Order = 3,
                            QuestionId = 34L,
                            Value = "On the job"
                        },
                        new
                        {
                            Id = 45L,
                            Order = 1,
                            QuestionId = 35L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 46L,
                            Order = 2,
                            QuestionId = 35L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 47L,
                            Order = 1,
                            QuestionId = 36L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 48L,
                            Order = 2,
                            QuestionId = 36L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 49L,
                            Order = 1,
                            QuestionId = 37L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 50L,
                            Order = 2,
                            QuestionId = 37L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 51L,
                            Name = "pregnantNow",
                            Order = 1,
                            QuestionId = 38L,
                            Value = "Pregnant now / in past 6 months"
                        },
                        new
                        {
                            Id = 52L,
                            Name = "veteran",
                            Order = 2,
                            QuestionId = 38L,
                            Value = "Veteran"
                        },
                        new
                        {
                            Id = 53L,
                            Name = "memberOfIndianTribe",
                            Order = 3,
                            QuestionId = 38L,
                            Value = "Member of Indian tribe"
                        },
                        new
                        {
                            Id = 54L,
                            Name = "formerFosterYouth",
                            Order = 4,
                            QuestionId = 38L,
                            Value = "Former Foster Youth"
                        },
                        new
                        {
                            Id = 55L,
                            Name = "deemed",
                            Order = 1,
                            QuestionId = 39L,
                            Value = "Deemed as disabled for 12 months or longer"
                        },
                        new
                        {
                            Id = 56L,
                            Name = "you/member",
                            Order = 2,
                            QuestionId = 39L,
                            Value = "You/member of your family been declared legally blind"
                        },
                        new
                        {
                            Id = 57L,
                            Name = "inCrime",
                            Order = 1,
                            QuestionId = 40L,
                            Value = "In crime related violence (as a victim)"
                        },
                        new
                        {
                            Id = 58L,
                            Name = "inMotorVehicle",
                            Order = 2,
                            QuestionId = 40L,
                            Value = "In motor vehicle accident"
                        },
                        new
                        {
                            Id = 59L,
                            Name = "onTheJob",
                            Order = 3,
                            QuestionId = 40L,
                            Value = "On the job"
                        },
                        new
                        {
                            Id = 60L,
                            Order = 1,
                            QuestionId = 41L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 61L,
                            Order = 2,
                            QuestionId = 41L,
                            Value = "Yes"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Assessment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentStatusMasterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExternalPatientId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentStatusMasterId");

                    b.ToTable("Assessment");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.AssessmentInPatientDashboard", b =>
                {
                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<long>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssessmentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HospitalName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("bit");

                    b.Property<long>("PatientId")
                        .HasColumnType("bigint");

                    b.Property<string>("ProfileImageData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Programs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubmittedOn")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AssessmentInPatientDashboard");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.AssessmentStatusMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssessmentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssessmentStatusMaster");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AssessmentStatus = "Incomplete"
                        },
                        new
                        {
                            Id = 2L,
                            AssessmentStatus = "Documentation Incomplete"
                        },
                        new
                        {
                            Id = 3L,
                            AssessmentStatus = "Verification Pending"
                        },
                        new
                        {
                            Id = 4L,
                            AssessmentStatus = "Completed"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.AssessmentVerification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("CellNumberOTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CellNumberOTPUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailVerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCellNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.ToTable("AssessmentVerification");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.BasicInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("BasicContactId")
                        .HasColumnType("bigint");

                    b.Property<string>("CellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HomeContactId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaidenName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSNNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WorkContactId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.ToTable("BasicInfo");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.ContactPreference", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContactAddressId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContactEmailId")
                        .HasColumnType("bigint");

                    b.Property<long>("ContactPhoneId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModeOfCommunication")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OtherContactId")
                        .HasColumnType("bigint");

                    b.Property<string>("TimeOfCalling")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContactPreference");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Control", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContextHelp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControlType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HelpText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Control");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ControlType = "numerictextbox"
                        },
                        new
                        {
                            Id = 2L,
                            ControlType = "dropdown"
                        },
                        new
                        {
                            Id = 3L,
                            ControlType = "radio"
                        },
                        new
                        {
                            Id = 4L,
                            ControlType = "label"
                        },
                        new
                        {
                            Id = 5L,
                            ControlType = "textbox"
                        },
                        new
                        {
                            Id = 6L,
                            ControlType = "date"
                        },
                        new
                        {
                            Id = 7L,
                            ControlType = "cell"
                        },
                        new
                        {
                            Id = 8L,
                            ControlType = "toggle"
                        },
                        new
                        {
                            Id = 9L,
                            ControlType = "button"
                        },
                        new
                        {
                            Id = 10L,
                            ControlType = "checkbox"
                        },
                        new
                        {
                            Id = 11L,
                            ControlType = "countButton"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Document", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Checksum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DocumentTypeMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("DocumentTypeMasterId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DocumentCategoryDocumentTypeMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DocumentCategoryMasterId")
                        .HasColumnType("bigint");

                    b.Property<long?>("DocumentTypeMasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DocumentCategoryMasterId");

                    b.HasIndex("DocumentTypeMasterId");

                    b.ToTable("DocumentCategoryDocumentTypeMapping");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DocumentCategoryMasterId = 1L,
                            DocumentTypeMasterId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            DocumentCategoryMasterId = 1L,
                            DocumentTypeMasterId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            DocumentCategoryMasterId = 1L,
                            DocumentTypeMasterId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            DocumentCategoryMasterId = 1L,
                            DocumentTypeMasterId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            DocumentCategoryMasterId = 1L,
                            DocumentTypeMasterId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            DocumentCategoryMasterId = 1L,
                            DocumentTypeMasterId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            DocumentCategoryMasterId = 1L,
                            DocumentTypeMasterId = 7L
                        },
                        new
                        {
                            Id = 8L,
                            DocumentCategoryMasterId = 2L,
                            DocumentTypeMasterId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            DocumentCategoryMasterId = 2L,
                            DocumentTypeMasterId = 5L
                        },
                        new
                        {
                            Id = 10L,
                            DocumentCategoryMasterId = 2L,
                            DocumentTypeMasterId = 7L
                        },
                        new
                        {
                            Id = 11L,
                            DocumentCategoryMasterId = 3L,
                            DocumentTypeMasterId = 8L
                        },
                        new
                        {
                            Id = 12L,
                            DocumentCategoryMasterId = 3L,
                            DocumentTypeMasterId = 9L
                        },
                        new
                        {
                            Id = 13L,
                            DocumentCategoryMasterId = 3L,
                            DocumentTypeMasterId = 10L
                        },
                        new
                        {
                            Id = 14L,
                            DocumentCategoryMasterId = 3L,
                            DocumentTypeMasterId = 11L
                        },
                        new
                        {
                            Id = 15L,
                            DocumentCategoryMasterId = 4L,
                            DocumentTypeMasterId = 12L
                        },
                        new
                        {
                            Id = 16L,
                            DocumentCategoryMasterId = 5L,
                            DocumentTypeMasterId = 13L
                        },
                        new
                        {
                            Id = 17L,
                            DocumentCategoryMasterId = 5L,
                            DocumentTypeMasterId = 14L
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DocumentCategoryMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentCategoryMaster");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryName = "Identification"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryName = "Address"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryName = "Income"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryName = "Eforms"
                        },
                        new
                        {
                            Id = 5L,
                            CategoryName = "Other"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DocumentProgramMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ProgramDocumentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("ProgramDocumentId");

                    b.ToTable("DocumentProgramMapping");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DocumentTypeMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DocumentTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentTypeMaster");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DocumentTypeName = "ValidDriversLicense"
                        },
                        new
                        {
                            Id = 2L,
                            DocumentTypeName = "BirthCertificate"
                        },
                        new
                        {
                            Id = 3L,
                            DocumentTypeName = "StateissuedIdentificationCard"
                        },
                        new
                        {
                            Id = 4L,
                            DocumentTypeName = "StudentIdentificationCard"
                        },
                        new
                        {
                            Id = 5L,
                            DocumentTypeName = "SocialSecurityCard"
                        },
                        new
                        {
                            Id = 6L,
                            DocumentTypeName = "MilitaryIdentificationCard"
                        },
                        new
                        {
                            Id = 7L,
                            DocumentTypeName = "PassportorPassportCard"
                        },
                        new
                        {
                            Id = 8L,
                            DocumentTypeName = "Pan Card"
                        },
                        new
                        {
                            Id = 9L,
                            DocumentTypeName = "Bank Statement"
                        },
                        new
                        {
                            Id = 10L,
                            DocumentTypeName = "Salary Report"
                        },
                        new
                        {
                            Id = 11L,
                            DocumentTypeName = "Others"
                        },
                        new
                        {
                            Id = 12L,
                            DocumentTypeName = "Eforms"
                        },
                        new
                        {
                            Id = 13L,
                            DocumentTypeName = "HIPAAandPrivacyConsent"
                        },
                        new
                        {
                            Id = 14L,
                            DocumentTypeName = "ConsenttoTreat"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DropDown.Gender", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gender");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "M",
                            Value = "Male"
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "F",
                            Value = "Female"
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "U",
                            Value = "Unreported or Unknown"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DropDown.IncomeType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomeType");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "DK",
                            Value = "Don’t Know"
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "I",
                            Value = "Wages, Salaries, Tips, and Commission Income from Work"
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "SE",
                            Value = "Self-Employment and Business Income"
                        },
                        new
                        {
                            Id = 4L,
                            KeyName = "UE",
                            Value = "Unemployment Benefits"
                        },
                        new
                        {
                            Id = 5L,
                            KeyName = "IK",
                            Value = "In-Kind Support"
                        },
                        new
                        {
                            Id = 6L,
                            KeyName = "PA",
                            Value = "Pensions and Annuitiesnnuities"
                        },
                        new
                        {
                            Id = 7L,
                            KeyName = "NG",
                            Value = "National Guard Wages"
                        },
                        new
                        {
                            Id = 8L,
                            KeyName = "DIV",
                            Value = "Dividends"
                        },
                        new
                        {
                            Id = 9L,
                            KeyName = "B",
                            Value = "Bonuses"
                        },
                        new
                        {
                            Id = 10L,
                            KeyName = "INT",
                            Value = "Interest Income"
                        },
                        new
                        {
                            Id = 11L,
                            KeyName = "SP",
                            Value = "Severance Pay"
                        },
                        new
                        {
                            Id = 12L,
                            KeyName = "ROY",
                            Value = "Royalties"
                        },
                        new
                        {
                            Id = 13L,
                            KeyName = "DPP",
                            Value = "Disability Pension Plans"
                        },
                        new
                        {
                            Id = 14L,
                            KeyName = "SSDI",
                            Value = "Social Security Disability Income"
                        },
                        new
                        {
                            Id = 15L,
                            KeyName = "SSDSI",
                            Value = "Social Security Disability Supplemental Income"
                        },
                        new
                        {
                            Id = 16L,
                            KeyName = "RA",
                            Value = "Retirement Account Income"
                        },
                        new
                        {
                            Id = 17L,
                            KeyName = "AL",
                            Value = "Alimony"
                        },
                        new
                        {
                            Id = 18L,
                            KeyName = "RI",
                            Value = "Net Rental Income"
                        },
                        new
                        {
                            Id = 19L,
                            KeyName = "GF",
                            Value = "Net Gaming/Fishing Income"
                        },
                        new
                        {
                            Id = 20L,
                            KeyName = "A",
                            Value = "Awards"
                        },
                        new
                        {
                            Id = 21L,
                            KeyName = "CA",
                            Value = "Court Awards and Damages"
                        },
                        new
                        {
                            Id = 22L,
                            KeyName = "CLG",
                            Value = "Earnings for Clergy"
                        },
                        new
                        {
                            Id = 23L,
                            KeyName = "AC",
                            Value = "Americorp"
                        },
                        new
                        {
                            Id = 24L,
                            KeyName = "GI",
                            Value = "Gambling Income"
                        },
                        new
                        {
                            Id = 25L,
                            KeyName = "COLA",
                            Value = "Government Cost of Living Allowance"
                        },
                        new
                        {
                            Id = 26L,
                            KeyName = "RR",
                            Value = "Railroad Retirement Benefits"
                        },
                        new
                        {
                            Id = 27L,
                            KeyName = "DNP",
                            Value = "Do Not Want to Provide"
                        },
                        new
                        {
                            Id = 28L,
                            KeyName = "OTH",
                            Value = "Other"
                        },
                        new
                        {
                            Id = 29L,
                            KeyName = "STP",
                            Value = "Strike Payments"
                        },
                        new
                        {
                            Id = 30L,
                            KeyName = "TAX",
                            Value = "Tax Refunds"
                        },
                        new
                        {
                            Id = 31L,
                            KeyName = "TEA",
                            Value = "TEA Cash"
                        },
                        new
                        {
                            Id = 32L,
                            KeyName = "VA",
                            Value = "VA Benefits"
                        },
                        new
                        {
                            Id = 33L,
                            KeyName = "WC",
                            Value = "Workers Comp Benefits"
                        },
                        new
                        {
                            Id = 34L,
                            KeyName = "EDU",
                            Value = "Educational Grants"
                        },
                        new
                        {
                            Id = 35L,
                            KeyName = "FC",
                            Value = "Foster Care Payments"
                        },
                        new
                        {
                            Id = 36L,
                            KeyName = "CSUP",
                            Value = "Child Support"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DropDown.IncomeTypeCurrentStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IncomeTypeCurrentStatus");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "C",
                            Value = "Current"
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "NCM",
                            Value = "Not Current, but in month of patient care"
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "NLT6",
                            Value = "Not Current, but from 6 months or less ago"
                        },
                        new
                        {
                            Id = 4L,
                            KeyName = "NGT6",
                            Value = "Not Current, but from 6 or more months ago"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DropDown.MaritalStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaritalStatus");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "A",
                            Value = "Separated"
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "D",
                            Value = "Divorced"
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "M",
                            Value = "Married"
                        },
                        new
                        {
                            Id = 4L,
                            KeyName = "P",
                            Value = "Domestic partner"
                        },
                        new
                        {
                            Id = 5L,
                            KeyName = "S",
                            Value = "Single"
                        },
                        new
                        {
                            Id = 6L,
                            KeyName = "T",
                            Value = "Unreported"
                        },
                        new
                        {
                            Id = 7L,
                            KeyName = "U",
                            Value = "Unknown"
                        },
                        new
                        {
                            Id = 8L,
                            KeyName = "W",
                            Value = "Widowed"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DropDown.PayPeriod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PayPeriod");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "4.33",
                            Value = "Weekly"
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "2.17",
                            Value = "Biweekly"
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "2",
                            Value = "Bimonthly"
                        },
                        new
                        {
                            Id = 4L,
                            KeyName = "1",
                            Value = "Monthly"
                        },
                        new
                        {
                            Id = 5L,
                            KeyName = "0.833",
                            Value = "Yearly"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DropDown.RelationshipToPatient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RelationshipToPatient");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "ASC",
                            Value = "Associate"
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "BRO",
                            Value = "Brother"
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "CGV",
                            Value = "Care giver"
                        },
                        new
                        {
                            Id = 4L,
                            KeyName = "CHD",
                            Value = "Child"
                        },
                        new
                        {
                            Id = 5L,
                            KeyName = "DEP",
                            Value = "Handicapped dependent"
                        },
                        new
                        {
                            Id = 6L,
                            KeyName = "DOM",
                            Value = "Life partner"
                        },
                        new
                        {
                            Id = 7L,
                            KeyName = "EMC",
                            Value = "Emergency contact"
                        },
                        new
                        {
                            Id = 8L,
                            KeyName = "EME",
                            Value = "Employee"
                        },
                        new
                        {
                            Id = 9L,
                            KeyName = "EMR",
                            Value = "Employer"
                        },
                        new
                        {
                            Id = 10L,
                            KeyName = "EXF",
                            Value = "Extended family"
                        },
                        new
                        {
                            Id = 11L,
                            KeyName = "FCH",
                            Value = "Foster child"
                        },
                        new
                        {
                            Id = 12L,
                            KeyName = "FND",
                            Value = "Friend"
                        },
                        new
                        {
                            Id = 13L,
                            KeyName = "FTH",
                            Value = "Father"
                        },
                        new
                        {
                            Id = 14L,
                            KeyName = "GCH",
                            Value = "Grandchild"
                        },
                        new
                        {
                            Id = 15L,
                            KeyName = "GRD",
                            Value = "Guardian"
                        },
                        new
                        {
                            Id = 16L,
                            KeyName = "GRP",
                            Value = "Grandparent"
                        },
                        new
                        {
                            Id = 17L,
                            KeyName = "MGR",
                            Value = "Manager"
                        },
                        new
                        {
                            Id = 18L,
                            KeyName = "MTH",
                            Value = "Mother"
                        },
                        new
                        {
                            Id = 19L,
                            KeyName = "NCH",
                            Value = "Natural child"
                        },
                        new
                        {
                            Id = 20L,
                            KeyName = "OAD",
                            Value = "Other adult"
                        },
                        new
                        {
                            Id = 21L,
                            KeyName = "OTH",
                            Value = "Other"
                        },
                        new
                        {
                            Id = 22L,
                            KeyName = "OWN",
                            Value = "Owner"
                        },
                        new
                        {
                            Id = 23L,
                            KeyName = "PAR",
                            Value = "Parent"
                        },
                        new
                        {
                            Id = 24L,
                            KeyName = "SCH",
                            Value = "Stepchild"
                        },
                        new
                        {
                            Id = 25L,
                            KeyName = "SEL",
                            Value = "Self"
                        },
                        new
                        {
                            Id = 26L,
                            KeyName = "SIB",
                            Value = "Sibling"
                        },
                        new
                        {
                            Id = 27L,
                            KeyName = "SIS",
                            Value = "Sister"
                        },
                        new
                        {
                            Id = 28L,
                            KeyName = "SPO",
                            Value = "Spouse"
                        },
                        new
                        {
                            Id = 29L,
                            KeyName = "TRA",
                            Value = "Trainer"
                        },
                        new
                        {
                            Id = 30L,
                            KeyName = "UNK",
                            Value = "Unknown"
                        },
                        new
                        {
                            Id = 31L,
                            KeyName = "WRD",
                            Value = "Ward of court"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DropDown.ResourceType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceType");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "PCA",
                            Value = "Cash Assets"
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "IRA",
                            Value = "IRA/401K"
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "PV",
                            Value = "Vehicle, Primary"
                        },
                        new
                        {
                            Id = 4L,
                            KeyName = "NPV",
                            Value = "Vehicle, Non-Primary"
                        },
                        new
                        {
                            Id = 5L,
                            KeyName = "RPH",
                            Value = "Real Property, Home"
                        },
                        new
                        {
                            Id = 6L,
                            KeyName = "RPB",
                            Value = "Real Property, Building"
                        },
                        new
                        {
                            Id = 7L,
                            KeyName = "RPL",
                            Value = "Real Property, Land"
                        },
                        new
                        {
                            Id = 8L,
                            KeyName = "RPLS",
                            Value = "Real Property, Life Estates"
                        },
                        new
                        {
                            Id = 9L,
                            KeyName = "PBF",
                            Value = "Burial Funds"
                        },
                        new
                        {
                            Id = 10L,
                            KeyName = "PBS",
                            Value = "Burial Spaces"
                        },
                        new
                        {
                            Id = 11L,
                            KeyName = "PCF",
                            Value = "Commingled Funds"
                        },
                        new
                        {
                            Id = 12L,
                            KeyName = "PCC",
                            Value = "Contracts for Care"
                        },
                        new
                        {
                            Id = 13L,
                            KeyName = "PEA",
                            Value = "Escrow Accounts"
                        },
                        new
                        {
                            Id = 14L,
                            KeyName = "PFA",
                            Value = "Funeral Agreements"
                        },
                        new
                        {
                            Id = 15L,
                            KeyName = "PHS",
                            Value = "Home Sale Proceeds"
                        },
                        new
                        {
                            Id = 16L,
                            KeyName = "PIP",
                            Value = "Income Producing Property"
                        },
                        new
                        {
                            Id = 17L,
                            KeyName = "PIDA",
                            Value = "Individual Development Accounts"
                        },
                        new
                        {
                            Id = 18L,
                            KeyName = "PI",
                            Value = "Life Insurance"
                        },
                        new
                        {
                            Id = 19L,
                            KeyName = "PESP",
                            Value = "Educational Saving Plan"
                        },
                        new
                        {
                            Id = 20L,
                            KeyName = "PPP",
                            Value = "Pension Plans"
                        },
                        new
                        {
                            Id = 21L,
                            KeyName = "DK",
                            Value = "Don’t Know"
                        },
                        new
                        {
                            Id = 22L,
                            KeyName = "DNP",
                            Value = "Do Not Want to Provide"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DropDown.ResourceTypeCurrentStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceTypeCurrentStatus");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "CO",
                            Value = "Currently Owned"
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "SLT1",
                            Value = "Sold Less Than 1 Year Ago"
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "SMT1",
                            Value = "Sold More Than 1 Year Ago"
                        },
                        new
                        {
                            Id = 4L,
                            KeyName = "TLT1",
                            Value = "Transferred Less Than 5 Years Ago"
                        },
                        new
                        {
                            Id = 5L,
                            KeyName = "TMT1",
                            Value = "Transferred More Than 5 Years Ago"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DropDown.Verification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Verification");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "NV",
                            Value = "Not Yet Verified"
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "V",
                            Value = "Verified"
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "UV",
                            Value = "Unable to Verify"
                        },
                        new
                        {
                            Id = 4L,
                            KeyName = "ANV",
                            Value = "Accepted, Not Verified"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DynamicScreens", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LeftContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeftHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("NextScreenId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PreviousScreenId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DynamicScreens");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LeftHeader = "Lets get you started"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LeftHeader = "Residential Zip Code"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LeftHeader = "Citizenship Status"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LeftHeader = "Patient Demographics"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LeftHeader = "Insurance Coverage"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Let us know the total number of members in your household.",
                            LeftHeader = "Household Members"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Let us know the total income & resources of your household. It includes the income & resources of your & your household members also.",
                            LeftHeader = "Household Income & Resources"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Kindly answer few questions to help you better. The questions includes on your health conditions.",
                            LeftHeader = "General Information"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Kindly answer few questions to help you better. The questions includes on your health conditions.",
                            LeftHeader = "General Information"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Kindly answer few questions to help you better. The questions includes on your health conditions.",
                            LeftHeader = "General Information"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = -1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LeftContent = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            LeftHeader = "Social Security Number"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.FieldType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FieldType");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "cell"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "countButton"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "date"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "dropdown"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "radio"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "textfield"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "toggle"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "checkbox"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Type = "ssn"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.FieldValidatorType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FieldValidatorType");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Numeric",
                            Type = "^[0-9]*$"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Decimal",
                            Type = "^[0-9]+([,.][0-9]+)?$"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Email",
                            Type = "^[a-z0-9._%+-]+@[a-z0-9.-]+\\.com$"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alphabets",
                            Type = "^[a-zA-Z ]*$"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Alphanumeric",
                            Type = "^[a-zA-Z0-9]+$"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Date",
                            Type = "^(0?[1-9]|1[0-2])\\/(0?[1-9]|1\\d|2\\d|3[01])\\/(19|20)\\d{2}$"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Guarantor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("BasicContactId")
                        .HasColumnType("bigint");

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("HomeContactId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelationShipWithPatient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSNNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("WorkContactId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.ToTable("Guarantor");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.HouseHoldMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDependent")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsInsuranceAvailable")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsMedicAidAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MedicAidEffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicAidId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("MedicAidTerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PriorCoverageEffectiveFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PriorCoverageTerminationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSNNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suffix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.ToTable("HouseHoldMember");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.HouseHoldMemberIncome", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CalculatedMonthlyIncome")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<long?>("ContactDetailsId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("GrossPay")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("GrossPayPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HouseHoldMemberId")
                        .HasColumnType("bigint");

                    b.Property<string>("IncomeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Verification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactDetailsId");

                    b.HasIndex("HouseHoldMemberId");

                    b.ToTable("HouseHoldMemberIncome");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.HouseHoldMemberResource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CalculatedValue")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("CurrentMarketValue")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("CurrentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HouseHoldMemberId")
                        .HasColumnType("bigint");

                    b.Property<string>("Ownership")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Verification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HouseHoldMemberId");

                    b.ToTable("HouseHoldMemberResource");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.HouseholdMemberDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("DocumentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HouseholdMemberId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("HouseholdMemberId");

                    b.ToTable("HouseholdMemberDocument");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Mappings.ScreenTenantMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int>("RecordStatus")
                        .HasColumnType("int");

                    b.Property<long?>("ScreenId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ScreenId");

                    b.HasIndex("TenantId");

                    b.ToTable("ScreenTenantMapping");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Option", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<long?>("QuickAssessmentQuestionsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuickAssessmentQuestionsId");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "myself",
                            Order = 1,
                            QuickAssessmentQuestionsId = 1L,
                            Value = "Myself"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "other",
                            Order = 2,
                            QuickAssessmentQuestionsId = 1L,
                            Value = "Relative/Friend/Other"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "usCitizen",
                            Order = 1,
                            QuickAssessmentQuestionsId = 5L,
                            Value = "U.S. Citizen"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "legalResident",
                            Order = 2,
                            QuickAssessmentQuestionsId = 5L,
                            Value = "Legal Resident"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "undocumented",
                            Order = 3,
                            QuickAssessmentQuestionsId = 5L,
                            Value = "Undocumented"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "unknown",
                            Order = 4,
                            QuickAssessmentQuestionsId = 5L,
                            Value = "Unknown"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "M",
                            Order = 1,
                            QuickAssessmentQuestionsId = 9L,
                            Value = "Male"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "F",
                            Order = 2,
                            QuickAssessmentQuestionsId = 9L,
                            Value = "Female"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "U",
                            Order = 3,
                            QuickAssessmentQuestionsId = 9L,
                            Value = "Unreported or Unknown"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "A",
                            Order = 1,
                            QuickAssessmentQuestionsId = 10L,
                            Value = "Separated"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "D",
                            Order = 2,
                            QuickAssessmentQuestionsId = 10L,
                            Value = "Divorced"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "M",
                            Order = 3,
                            QuickAssessmentQuestionsId = 10L,
                            Value = "Married"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "P",
                            Order = 4,
                            QuickAssessmentQuestionsId = 10L,
                            Value = "Domestic partner"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "S",
                            Order = 5,
                            QuickAssessmentQuestionsId = 10L,
                            Value = "Single"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "T",
                            Order = 6,
                            QuickAssessmentQuestionsId = 10L,
                            Value = "Unreported"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "U",
                            Order = 7,
                            QuickAssessmentQuestionsId = 10L,
                            Value = "Unknown"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "W",
                            Order = 8,
                            QuickAssessmentQuestionsId = 21L,
                            Value = "Widowed"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "calFresh",
                            Order = 1,
                            QuickAssessmentQuestionsId = 24L,
                            Value = "CalFresh (Food Stamps)"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "ssi",
                            Order = 2,
                            QuickAssessmentQuestionsId = 24L,
                            Value = "SSI / SSP"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "calWorks",
                            Order = 3,
                            QuickAssessmentQuestionsId = 24L,
                            Value = "CalWorks"
                        },
                        new
                        {
                            Id = 21L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "refugeeAssisstance",
                            Order = 4,
                            QuickAssessmentQuestionsId = 24L,
                            Value = "Refugee Assistance"
                        },
                        new
                        {
                            Id = 22L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "allOfTheAbove",
                            Order = 5,
                            QuickAssessmentQuestionsId = 24L,
                            Value = "All of the above"
                        },
                        new
                        {
                            Id = 23L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "yearly",
                            Order = 1,
                            QuickAssessmentQuestionsId = 26L,
                            Value = "Yearly"
                        },
                        new
                        {
                            Id = 24L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "monthly",
                            Order = 2,
                            QuickAssessmentQuestionsId = 26L,
                            Value = "Monthly"
                        },
                        new
                        {
                            Id = 25L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "bimonthly",
                            Order = 3,
                            QuickAssessmentQuestionsId = 26L,
                            Value = "Bimonthly"
                        },
                        new
                        {
                            Id = 26L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "biweekly",
                            Order = 4,
                            QuickAssessmentQuestionsId = 26L,
                            Value = "Biweekly"
                        },
                        new
                        {
                            Id = 27L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "weekly",
                            Order = 5,
                            QuickAssessmentQuestionsId = 26L,
                            Value = "Weekly"
                        },
                        new
                        {
                            Id = 28L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "pregnantNow",
                            Order = 1,
                            QuickAssessmentQuestionsId = 28L,
                            Value = "Pregnant now / in past 6 months"
                        },
                        new
                        {
                            Id = 29L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "veteran",
                            Order = 2,
                            QuickAssessmentQuestionsId = 28L,
                            Value = "Veteran"
                        },
                        new
                        {
                            Id = 30L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "memberOfIndianTribe",
                            Order = 3,
                            QuickAssessmentQuestionsId = 28L,
                            Value = "Member of Indian tribe"
                        },
                        new
                        {
                            Id = 31L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "formerFosterYouth",
                            Order = 4,
                            QuickAssessmentQuestionsId = 28L,
                            Value = "Former Foster Youth"
                        },
                        new
                        {
                            Id = 32L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "deemed",
                            Order = 1,
                            QuickAssessmentQuestionsId = 29L,
                            Value = "Deemed as disabled for 12 months or longer"
                        },
                        new
                        {
                            Id = 33L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "you/member",
                            Order = 2,
                            QuickAssessmentQuestionsId = 29L,
                            Value = "You/member of your family been declared legally blind"
                        },
                        new
                        {
                            Id = 34L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "inCrime",
                            Order = 1,
                            QuickAssessmentQuestionsId = 30L,
                            Value = "In crime related violence (as a victim)"
                        },
                        new
                        {
                            Id = 35L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "inMotorVehicle",
                            Order = 2,
                            QuickAssessmentQuestionsId = 30L,
                            Value = "In motor vehicle accident"
                        },
                        new
                        {
                            Id = 36L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "onTheJob",
                            Order = 2,
                            QuickAssessmentQuestionsId = 30L,
                            Value = "On the job"
                        },
                        new
                        {
                            Id = 37L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "no",
                            Order = 1,
                            QuickAssessmentQuestionsId = 13L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 38L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "yes",
                            Order = 2,
                            QuickAssessmentQuestionsId = 13L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 39L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "No",
                            Order = 1,
                            QuickAssessmentQuestionsId = 22L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 40L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yes",
                            Order = 2,
                            QuickAssessmentQuestionsId = 22L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 41L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "No",
                            Order = 1,
                            QuickAssessmentQuestionsId = 23L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 42L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Yes",
                            Order = 2,
                            QuickAssessmentQuestionsId = 23L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 43L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = 1,
                            QuickAssessmentQuestionsId = 31L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 44L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = 1,
                            QuickAssessmentQuestionsId = 31L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 45L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = 1,
                            QuickAssessmentQuestionsId = 33L,
                            Value = "By clicking this box you acknowledge that you have received, reviewed and agree to the terms of use, privacy statement, e-signature disclosure and consent."
                        },
                        new
                        {
                            Id = 47L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = 1,
                            QuickAssessmentQuestionsId = 34L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 48L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = 1,
                            QuickAssessmentQuestionsId = 34L,
                            Value = "Yes"
                        },
                        new
                        {
                            Id = 49L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = 1,
                            QuickAssessmentQuestionsId = 35L,
                            Value = "No"
                        },
                        new
                        {
                            Id = 50L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Order = 1,
                            QuickAssessmentQuestionsId = 35L,
                            Value = "Yes"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.PasswordPolicy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttemptLimits")
                        .HasColumnType("int");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpireTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PasswordPolicy");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.PatientProgramMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEvaluated")
                        .HasColumnType("bit");

                    b.Property<long?>("ProgramId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.HasIndex("ProgramId");

                    b.ToTable("PatientProgramMapping");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Program", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BenefitsDescriptionUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.ProgramDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ESignFlag")
                        .HasColumnType("bit");

                    b.Property<string>("FormLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProgramId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("ProgramDocument");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ControlId")
                        .HasColumnType("bigint");

                    b.Property<string>("CssStyle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("QuestionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UiType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ControlId");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ControlId = 3L,
                            CssStyle = "rbn_style1",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Let us know who the patient is."
                        },
                        new
                        {
                            Id = 2L,
                            ControlId = 1L,
                            CssStyle = "txt_zip_style1",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Please enter your Zip code"
                        },
                        new
                        {
                            Id = 3L,
                            ControlId = 5L,
                            CssStyle = "txt_style1",
                            Description = "Please enter your city",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            QuestionName = "City"
                        },
                        new
                        {
                            Id = 4L,
                            ControlId = 5L,
                            CssStyle = "txt_style1",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            QuestionName = "State"
                        },
                        new
                        {
                            Id = 5L,
                            ControlId = 3L,
                            CssStyle = "rbn_style1",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Confirm your citizenship status"
                        },
                        new
                        {
                            Id = 6L,
                            ControlId = 4L,
                            CssStyle = "label",
                            DisplayFormat = "header",
                            IsRequired = false,
                            QuestionName = "Tell us about yourself"
                        },
                        new
                        {
                            Id = 7L,
                            ControlId = 5L,
                            CssStyle = "txt_style1",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            QuestionName = "First Name"
                        },
                        new
                        {
                            Id = 8L,
                            ControlId = 5L,
                            CssStyle = "txt_style1",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            QuestionName = "Last Name"
                        },
                        new
                        {
                            Id = 9L,
                            ControlId = 6L,
                            CssStyle = "dt_birth",
                            DisplayFormat = "inline",
                            IsRequired = false,
                            QuestionName = "date of birth"
                        },
                        new
                        {
                            Id = 10L,
                            ControlId = 2L,
                            CssStyle = "dd_gender_class",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            QuestionName = "Gender"
                        },
                        new
                        {
                            Id = 11L,
                            ControlId = 2L,
                            CssStyle = "dd_marital_class",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            QuestionName = "Marital Status"
                        },
                        new
                        {
                            Id = 12L,
                            ControlId = 5L,
                            CssStyle = "txt_style2",
                            DisplayFormat = "partition",
                            IsRequired = true,
                            QuestionName = "Email"
                        },
                        new
                        {
                            Id = 13L,
                            ControlId = 7L,
                            CssStyle = "txt_style3",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            QuestionName = "Cell number"
                        },
                        new
                        {
                            Id = 14L,
                            ControlId = 8L,
                            CssStyle = "tgl_style",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Do you currently or in the last 60 days have/had health insurance?"
                        },
                        new
                        {
                            Id = 15L,
                            ControlId = 4L,
                            CssStyle = "label",
                            DisplayFormat = "header",
                            IsRequired = false,
                            ParentId = 14L,
                            QuestionName = "Enter the following details"
                        },
                        new
                        {
                            Id = 16L,
                            ControlId = 5L,
                            CssStyle = "txt_style1",
                            DisplayFormat = "inline",
                            IsRequired = false,
                            ParentId = 14L,
                            QuestionName = "Payer Name"
                        },
                        new
                        {
                            Id = 17L,
                            ControlId = 5L,
                            CssStyle = "txt_style1",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            ParentId = 14L,
                            QuestionName = "Group Name"
                        },
                        new
                        {
                            Id = 18L,
                            ControlId = 1L,
                            CssStyle = "txt_style1",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            ParentId = 14L,
                            QuestionName = "Group Number"
                        },
                        new
                        {
                            Id = 19L,
                            ControlId = 1L,
                            CssStyle = "txt_style1",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            ParentId = 14L,
                            QuestionName = "Policy Number"
                        },
                        new
                        {
                            Id = 20L,
                            ControlId = 6L,
                            CssStyle = "dt_birth",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            ParentId = 14L,
                            QuestionName = "Effective From"
                        },
                        new
                        {
                            Id = 21L,
                            ControlId = 6L,
                            CssStyle = "dt_birth",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            ParentId = 14L,
                            QuestionName = "Termination"
                        },
                        new
                        {
                            Id = 22L,
                            ControlId = 4L,
                            CssStyle = "label",
                            DisplayFormat = "header",
                            IsRequired = false,
                            QuestionName = "Tell us about your household"
                        },
                        new
                        {
                            Id = 23L,
                            ControlId = 11L,
                            CssStyle = "numeric_counter_style",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Total Number of members living in your household"
                        },
                        new
                        {
                            Id = 24L,
                            ControlId = 11L,
                            CssStyle = "numeric_counter_style",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Minor children for whom you have full custody?"
                        },
                        new
                        {
                            Id = 25L,
                            ControlId = 8L,
                            CssStyle = "tgl_style",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Are you employed?"
                        },
                        new
                        {
                            Id = 26L,
                            ControlId = 8L,
                            CssStyle = "tgl_style",
                            DisplayFormat = "header",
                            IsRequired = true,
                            ParentId = 25L,
                            QuestionName = "Is anyone in your household employed?"
                        },
                        new
                        {
                            Id = 27L,
                            ControlId = 3L,
                            CssStyle = "rbn_style1",
                            Description = "If none of them apply, you can directly move to the next question.",
                            DisplayFormat = "header",
                            IsRequired = true,
                            ParentId = 26L,
                            QuestionName = "Do you currently receive any of the following?"
                        },
                        new
                        {
                            Id = 28L,
                            ControlId = 4L,
                            CssStyle = "label",
                            DisplayFormat = "header",
                            IsRequired = false,
                            QuestionName = "Enter household income and resources"
                        },
                        new
                        {
                            Id = 29L,
                            ControlId = 5L,
                            CssStyle = "txt_style1",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Estimated Household Income"
                        },
                        new
                        {
                            Id = 30L,
                            ControlId = 2L,
                            CssStyle = "dd_income_class",
                            DisplayFormat = "inline",
                            IsRequired = true,
                            QuestionName = "Income pay period"
                        },
                        new
                        {
                            Id = 31L,
                            ControlId = 5L,
                            CssStyle = "txt_style1",
                            Description = "Please estimate the total resource value held by all the members of the household in the form  of checking & savings, retirement accounts, property (home, vehicle, etc) and any others assets.",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Estimated Household Resources"
                        },
                        new
                        {
                            Id = 32L,
                            ControlId = 10L,
                            CssStyle = "rbn_style1",
                            Description = "If none of them apply, you can directly move to the next question.",
                            DisplayFormat = "header",
                            IsRequired = false,
                            QuestionName = "Please select the options that apply to you and click on next.",
                            RoleName = "Patient"
                        },
                        new
                        {
                            Id = 33L,
                            ControlId = 10L,
                            CssStyle = "rbn_style1",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Do any of the following health conditions apply to you?",
                            RoleName = "Patient"
                        },
                        new
                        {
                            Id = 34L,
                            ControlId = 10L,
                            CssStyle = "rbn_style1",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Select if you have been injured",
                            RoleName = "Patient"
                        },
                        new
                        {
                            Id = 35L,
                            ControlId = 8L,
                            CssStyle = "tgl_style",
                            DisplayFormat = "header",
                            IsRequired = true,
                            ParentId = 34L,
                            QuestionName = "Was a report filed?",
                            RoleName = "Patient"
                        },
                        new
                        {
                            Id = 36L,
                            ControlId = 8L,
                            CssStyle = "tgl_style",
                            DisplayFormat = "header",
                            IsRequired = true,
                            ParentId = 34L,
                            QuestionName = "Was a report filed?",
                            RoleName = "Patient"
                        },
                        new
                        {
                            Id = 37L,
                            ControlId = 8L,
                            CssStyle = "tgl_style",
                            DisplayFormat = "header",
                            IsRequired = true,
                            ParentId = 34L,
                            QuestionName = "Was a report filed?",
                            RoleName = "Patient"
                        },
                        new
                        {
                            Id = 38L,
                            ControlId = 3L,
                            CssStyle = "rbn_style1",
                            Description = "If none of them apply, you can directly move to the next question.",
                            DisplayFormat = "header",
                            IsRequired = false,
                            QuestionName = "Please select the options that apply to you and click on next.",
                            RoleName = "Advocate"
                        },
                        new
                        {
                            Id = 39L,
                            ControlId = 3L,
                            CssStyle = "rbn_style1",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Do any of the following health conditions apply to you?",
                            RoleName = "Advocate"
                        },
                        new
                        {
                            Id = 40L,
                            ControlId = 3L,
                            CssStyle = "rbn_style1",
                            DisplayFormat = "header",
                            IsRequired = true,
                            QuestionName = "Select if you have been injured",
                            RoleName = "Advocate"
                        },
                        new
                        {
                            Id = 41L,
                            ControlId = 8L,
                            CssStyle = "tgl_style",
                            DisplayFormat = "header",
                            IsRequired = true,
                            ParentId = 40L,
                            QuestionName = "Was a report filed?",
                            RoleName = "Advocate"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.QuickAssessmentQuestions", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AlertInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomValidation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DynamicScreensId")
                        .HasColumnType("bigint");

                    b.Property<string>("ErrorMessageInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("FieldTypeId")
                        .HasColumnType("bigint");

                    b.Property<string>("InlineLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsInlineLabel")
                        .HasColumnType("bit");

                    b.Property<string>("MaximumDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParentQuestionId")
                        .HasColumnType("bigint");

                    b.Property<string>("PatientLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placeholder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<string>("ScreenHeaderOthersLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenHeaderPatientLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScreenId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermAndConditionPopupMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermAndConditionsMessageLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TextBoxSubLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DynamicScreensId");

                    b.HasIndex("FieldTypeId");

                    b.ToTable("QuickAssessmentQuestions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 1L,
                            FieldName = "Patient",
                            FieldTypeId = 5L,
                            IsInlineLabel = false,
                            OrderId = "2",
                            Placeholder = "Select Patient Type",
                            Required = false,
                            ScreenHeaderPatientLabel = "Let us know who the patient is.",
                            ScreenId = "1",
                            UniqueKey = "patient"
                        },
                        new
                        {
                            Id = 2L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomValidation = "Zipcode",
                            DynamicScreensId = 2L,
                            FieldName = "Zip Code",
                            FieldTypeId = 6L,
                            IsInlineLabel = false,
                            OrderId = "2",
                            Placeholder = "Zip Code",
                            Required = false,
                            ScreenHeaderOthersLabel = "Please enter patients Zip code.",
                            ScreenHeaderPatientLabel = "Please enter your Zip code.",
                            ScreenId = "2",
                            UniqueKey = "zipCode"
                        },
                        new
                        {
                            Id = 3L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 2L,
                            FieldName = "City",
                            FieldTypeId = 6L,
                            IsInlineLabel = false,
                            OrderId = "3",
                            Placeholder = "City",
                            Required = false,
                            ScreenId = "2",
                            UniqueKey = "city"
                        },
                        new
                        {
                            Id = 4L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 2L,
                            FieldName = "State",
                            FieldTypeId = 6L,
                            IsInlineLabel = false,
                            OrderId = "3",
                            Placeholder = "State",
                            Required = false,
                            ScreenId = "2",
                            UniqueKey = "state"
                        },
                        new
                        {
                            Id = 5L,
                            AlertInfo = "Your state does not provide financial assistance to patients with unknown citizenship status.",
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomValidation = "Unknown",
                            DynamicScreensId = 3L,
                            ErrorMessageInfo = "Any further assistance message (if applicable) goes here. Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore",
                            FieldName = "Citizenship",
                            FieldTypeId = 5L,
                            IsInlineLabel = false,
                            OrderId = "2",
                            Placeholder = "Select Citizenship",
                            Required = false,
                            ScreenHeaderOthersLabel = "Confirm patient's citizenship status",
                            ScreenHeaderPatientLabel = "Confirm your citizenship status.",
                            ScreenId = "3",
                            UniqueKey = "citizenship"
                        },
                        new
                        {
                            Id = 6L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 4L,
                            FieldName = "First Name",
                            FieldTypeId = 6L,
                            IsInlineLabel = false,
                            OrderId = "2",
                            Placeholder = "First Name",
                            Required = true,
                            ScreenHeaderOthersLabel = "Tell us more about the patient.",
                            ScreenHeaderPatientLabel = "Tell us about yourself",
                            ScreenId = "4",
                            TextBoxSubLabel = "Please enter the legal name.",
                            UniqueKey = "firstName"
                        },
                        new
                        {
                            Id = 7L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 4L,
                            FieldName = "Last Name",
                            FieldTypeId = 6L,
                            IsInlineLabel = false,
                            OrderId = "3",
                            Placeholder = "Last Name",
                            Required = true,
                            ScreenId = "4",
                            UniqueKey = "lastName"
                        },
                        new
                        {
                            Id = 8L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 4L,
                            FieldName = "Date of Birth",
                            FieldTypeId = 3L,
                            IsInlineLabel = false,
                            MaximumDate = "today",
                            OrderId = "4",
                            Placeholder = "mm/dd/yyyy",
                            Required = true,
                            ScreenId = "4",
                            UniqueKey = "dateOfBirth"
                        },
                        new
                        {
                            Id = 9L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 4L,
                            FieldName = "Gender",
                            FieldTypeId = 4L,
                            IsInlineLabel = false,
                            OrderId = "5",
                            Placeholder = "Gender",
                            Required = true,
                            ScreenId = "4",
                            UniqueKey = "gender"
                        },
                        new
                        {
                            Id = 10L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 4L,
                            FieldName = "Marital Status",
                            FieldTypeId = 4L,
                            IsInlineLabel = false,
                            OrderId = "6",
                            Placeholder = "Marital Status",
                            Required = false,
                            ScreenId = "4",
                            UniqueKey = "maritalStatus"
                        },
                        new
                        {
                            Id = 11L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 4L,
                            FieldName = "Email",
                            FieldTypeId = 6L,
                            InlineLabel = "Email",
                            IsInlineLabel = true,
                            OrderId = "6",
                            Placeholder = "Email",
                            Required = true,
                            ScreenId = "4",
                            UniqueKey = "email"
                        },
                        new
                        {
                            Id = 12L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 4L,
                            FieldName = "Cell Number",
                            FieldTypeId = 1L,
                            InlineLabel = "Cell",
                            IsInlineLabel = true,
                            OrderId = "6",
                            Placeholder = "Cell Number",
                            Required = true,
                            ScreenId = "4",
                            UniqueKey = "cellNumber"
                        },
                        new
                        {
                            Id = 13L,
                            AlertInfo = "Invalid policy Number",
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomValidation = "Yes",
                            DynamicScreensId = 5L,
                            ErrorMessageInfo = "Your visit can be covered under your insurance. Please get in touch with your insurance provider for more information.",
                            FieldName = "Insurance",
                            FieldTypeId = 7L,
                            IsInlineLabel = false,
                            OrderId = "2",
                            Required = true,
                            ScreenHeaderOthersLabel = "Does the patient currently or in the last 60 days have/had health insurance?",
                            ScreenHeaderPatientLabel = "Do you currently or in the last 60 days have/had health insurance?",
                            ScreenId = "5",
                            UniqueKey = "insurance"
                        },
                        new
                        {
                            Id = 14L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 5L,
                            FieldName = "Payer Name",
                            FieldTypeId = 6L,
                            IsInlineLabel = false,
                            OrderId = "4",
                            ParentQuestionId = 13L,
                            Placeholder = "Payer name",
                            Required = true,
                            ScreenHeaderOthersLabel = "Enter the following details",
                            ScreenHeaderPatientLabel = "Enter the following details",
                            ScreenId = "5",
                            UniqueKey = "payerName"
                        },
                        new
                        {
                            Id = 15L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 5L,
                            FieldName = "Group Name",
                            FieldTypeId = 6L,
                            IsInlineLabel = false,
                            OrderId = "5",
                            ParentQuestionId = 13L,
                            Placeholder = "Group Name",
                            Required = true,
                            ScreenId = "5",
                            UniqueKey = "groupname"
                        },
                        new
                        {
                            Id = 16L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 5L,
                            FieldName = "Group Number",
                            FieldTypeId = 6L,
                            InlineLabel = "Group No.",
                            IsInlineLabel = true,
                            OrderId = "5",
                            ParentQuestionId = 13L,
                            Placeholder = "Group Number",
                            Required = true,
                            ScreenId = "5",
                            UniqueKey = "groupNo"
                        },
                        new
                        {
                            Id = 17L,
                            AlertInfo = "Invalid policy Number",
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomValidation = "PolicyNumber",
                            DynamicScreensId = 5L,
                            ErrorMessageInfo = "Your visit can be covered under your insurance. Please get in touch with your insurance provider for more information.",
                            FieldName = "Policy Number",
                            FieldTypeId = 6L,
                            InlineLabel = "Policy No.",
                            IsInlineLabel = true,
                            MessageInfo = "Your visit can be covered under your insurance. Please get in touch with your insurance provider for more information.",
                            OrderId = "6",
                            ParentQuestionId = 13L,
                            Placeholder = "Policy Number",
                            Required = true,
                            ScreenId = "5",
                            UniqueKey = "policyNo"
                        },
                        new
                        {
                            Id = 18L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 5L,
                            FieldName = "Effective From",
                            FieldTypeId = 3L,
                            InlineLabel = "Effective From",
                            IsInlineLabel = true,
                            OrderId = "7",
                            ParentQuestionId = 13L,
                            Placeholder = "Effective From",
                            Required = true,
                            ScreenId = "5",
                            UniqueKey = "effectiveFrom"
                        },
                        new
                        {
                            Id = 19L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 5L,
                            FieldName = "Termination Date",
                            FieldTypeId = 3L,
                            InlineLabel = "Termination",
                            IsInlineLabel = true,
                            OrderId = "8",
                            ParentQuestionId = 13L,
                            Placeholder = "Termination",
                            Required = true,
                            ScreenId = "5",
                            UniqueKey = "termination"
                        },
                        new
                        {
                            Id = 20L,
                            Class = "col-5",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 6L,
                            FieldName = "Household Members",
                            FieldTypeId = 2L,
                            IsInlineLabel = false,
                            OrderId = "2",
                            OthersLabel = "Total Number of members living in patient's household",
                            PatientLabel = "Total Number of members living in your household",
                            Required = true,
                            ScreenHeaderOthersLabel = "Tell us about your household",
                            ScreenHeaderPatientLabel = "Tell us more about patient's household",
                            ScreenId = "6",
                            UniqueKey = "totalHouseholdMembers",
                            Value = "1"
                        },
                        new
                        {
                            Id = 21L,
                            Class = "col-5",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 6L,
                            FieldName = "Total Minors",
                            FieldTypeId = 2L,
                            IsInlineLabel = false,
                            OrderId = "3",
                            OthersLabel = "Minor children for whom the patient has full custody?",
                            PatientLabel = "Minor children for whom you have full custody?",
                            Required = true,
                            ScreenId = "6",
                            UniqueKey = "totalMinors",
                            Value = "0"
                        },
                        new
                        {
                            Id = 22L,
                            Class = "col-5",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomValidation = "Yes/No",
                            DynamicScreensId = 6L,
                            FieldName = "Is Employed",
                            FieldTypeId = 7L,
                            IsInlineLabel = false,
                            OrderId = "4",
                            OthersLabel = "Is the patient employed?",
                            PatientLabel = "Are you employed?",
                            Required = true,
                            ScreenId = "6",
                            UniqueKey = "isEmployed"
                        },
                        new
                        {
                            Id = 23L,
                            Class = "col-5",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomValidation = "Yes",
                            DynamicScreensId = 6L,
                            FieldName = "Is Household Employed",
                            FieldTypeId = 7L,
                            IsInlineLabel = false,
                            OrderId = "1",
                            OthersLabel = "Is anyone in your household employed?",
                            ParentQuestionId = 22L,
                            PatientLabel = "Is anyone in your household employed?",
                            Required = true,
                            ScreenId = "6",
                            UniqueKey = "isHouseholdEmployed"
                        },
                        new
                        {
                            Id = 24L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 6L,
                            ErrorMessageInfo = "If none of them apply, you can directly move to the next question.",
                            FieldName = "Program Services",
                            FieldTypeId = 8L,
                            IsInlineLabel = false,
                            MessageInfo = "If none of them apply, you can directly move to the next question.",
                            OrderId = "1",
                            ParentQuestionId = 23L,
                            Required = false,
                            ScreenHeaderOthersLabel = "Do you currently receive any of the following?",
                            ScreenHeaderPatientLabel = "Do you currently receive any of the following?",
                            ScreenId = "6",
                            UniqueKey = "programServices"
                        },
                        new
                        {
                            Id = 25L,
                            Class = "col-3",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 7L,
                            FieldName = "Household Income",
                            FieldTypeId = 6L,
                            InlineLabel = "$",
                            IsInlineLabel = true,
                            OrderId = "2",
                            OthersLabel = "Estimated Household Income",
                            PatientLabel = "Estimated Household Income",
                            Placeholder = "Income",
                            Required = true,
                            ScreenHeaderOthersLabel = "Enter patient's household income and resources",
                            ScreenHeaderPatientLabel = "Enter household income and resources",
                            ScreenId = "7",
                            UniqueKey = "householdIncome"
                        },
                        new
                        {
                            Id = 26L,
                            Class = "col-3",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 7L,
                            ErrorMessageInfo = "Include income earned by all the members of the household.",
                            FieldName = "Income Pay Period",
                            FieldTypeId = 4L,
                            IsInlineLabel = false,
                            MessageInfo = "Include income earned by all the members of the household.",
                            OrderId = "3",
                            OthersLabel = "Select Grosspay",
                            PatientLabel = "Select Grosspay",
                            Placeholder = "Gross Pay",
                            Required = true,
                            ScreenId = "7",
                            UniqueKey = "incomePayPeriod"
                        },
                        new
                        {
                            Id = 27L,
                            Class = "col-3",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 7L,
                            ErrorMessageInfo = "Please estimate the total resource value held by all the members of the household in the form of checking & savings, retirement accounts, property (home, vehicle, etc) and any others assets.",
                            FieldName = "Household Resources",
                            FieldTypeId = 6L,
                            InlineLabel = "$",
                            IsInlineLabel = true,
                            MessageInfo = "Please estimate the total resource value held by all the members of the household in the form of checking & savings, retirement accounts, property (home, vehicle, etc) and any others assets.",
                            OrderId = "4",
                            OthersLabel = "Estimated Household Resources",
                            PatientLabel = "Estimated Household Resources",
                            Placeholder = "Resources",
                            Required = true,
                            ScreenId = "7",
                            UniqueKey = "householdResources"
                        },
                        new
                        {
                            Id = 28L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomValidation = "Any",
                            DynamicScreensId = 8L,
                            ErrorMessageInfo = "If none of them apply, you can directly move to the next question.",
                            FieldName = "Service Program",
                            FieldTypeId = 8L,
                            IsInlineLabel = false,
                            MessageInfo = "If none of them apply, you can directly move to the next question.",
                            OrderId = "1",
                            Required = false,
                            ScreenHeaderOthersLabel = "Please select the options that apply to you and click on next.",
                            ScreenHeaderPatientLabel = "Please select the options that apply to you and click on next.",
                            ScreenId = "8",
                            UniqueKey = "serviceProgram"
                        },
                        new
                        {
                            Id = 29L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomValidation = "Any",
                            DynamicScreensId = 9L,
                            FieldName = "Health Condition",
                            FieldTypeId = 8L,
                            IsInlineLabel = false,
                            OrderId = "1",
                            Required = false,
                            ScreenHeaderOthersLabel = "Do any of the following health conditions apply to you?",
                            ScreenHeaderPatientLabel = "Do any of the following health conditions apply to you?",
                            ScreenId = "9",
                            UniqueKey = "healthConditiion"
                        },
                        new
                        {
                            Id = 30L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomValidation = "Any",
                            DynamicScreensId = 10L,
                            FieldName = "Been Injured",
                            FieldTypeId = 8L,
                            IsInlineLabel = false,
                            OrderId = "1",
                            Required = false,
                            ScreenHeaderOthersLabel = "Select if you have been injured",
                            ScreenHeaderPatientLabel = "Select if you have been injured",
                            ScreenId = "10",
                            UniqueKey = "beenInjured"
                        },
                        new
                        {
                            Id = 31L,
                            Class = "col-5",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 10L,
                            FieldName = "Is Report Filed",
                            FieldTypeId = 7L,
                            IsInlineLabel = false,
                            OrderId = "1",
                            OthersLabel = "Was a Report Filed?",
                            ParentQuestionId = 30L,
                            PatientLabel = "Was a Report Filed?",
                            Required = false,
                            ScreenId = "10",
                            UniqueKey = "crimeReportFiled"
                        },
                        new
                        {
                            Id = 32L,
                            Class = "col-5",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 11L,
                            FieldName = "SSN",
                            FieldTypeId = 9L,
                            IsInlineLabel = false,
                            MessageInfo = "Your SSN is secure with us. We ask for this information as most government agencies require this number when submitting an application for benefits.",
                            OrderId = "1",
                            Placeholder = "SSN",
                            Required = true,
                            ScreenHeaderOthersLabel = "Last Step.Please provide patient''s SSN",
                            ScreenHeaderPatientLabel = "Last Step. Please provide your SSN",
                            ScreenId = "11",
                            UniqueKey = "ssnNumber"
                        },
                        new
                        {
                            Id = 33L,
                            Class = "col-12",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 11L,
                            FieldTypeId = 8L,
                            IsInlineLabel = false,
                            OrderId = "2",
                            Required = true,
                            ScreenId = "11",
                            TermAndConditionPopupMessage = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            TermAndConditionsMessageLabel = "Terms And Conditions",
                            UniqueKey = "agreementCheckBox"
                        },
                        new
                        {
                            Id = 34L,
                            Class = "col-5",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 10L,
                            FieldName = "Is Report Filed",
                            FieldTypeId = 7L,
                            IsInlineLabel = false,
                            OrderId = "1",
                            OthersLabel = "Was a Report Filed?",
                            ParentQuestionId = 30L,
                            PatientLabel = "Was a Report Filed?",
                            Required = false,
                            ScreenId = "10",
                            UniqueKey = "motorReportFiled"
                        },
                        new
                        {
                            Id = 35L,
                            Class = "col-5",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DynamicScreensId = 10L,
                            FieldName = "Is Report Filed",
                            FieldTypeId = 7L,
                            IsInlineLabel = false,
                            OrderId = "1",
                            OthersLabel = "Was a Report Filed?",
                            ParentQuestionId = 30L,
                            PatientLabel = "Was a Report Filed?",
                            Required = false,
                            ScreenId = "10",
                            UniqueKey = "jobReportFiled"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.QuickAssessmentResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionAnswerJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.ToTable("QuickAssessmentResult");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.ReviewNotes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.ToTable("ReviewNotes");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Screen", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Screen");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Let's get you started",
                            Description = "Select the patient type to proceed quick assessment.",
                            IsActive = false,
                            IsRequired = false,
                            Name = "Start screen",
                            Order = 0L
                        },
                        new
                        {
                            Id = 2L,
                            Content = "Residential Zip Code",
                            Description = "Enter the Zip code to let us know your location to help you.",
                            IsActive = false,
                            IsRequired = false,
                            Name = "Zip code screen",
                            Order = 0L
                        },
                        new
                        {
                            Id = 3L,
                            Content = "Citizenship Status",
                            Description = "Let us know your citizenship",
                            IsActive = false,
                            IsRequired = false,
                            Name = "Citizenship screen",
                            Order = 0L
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Patient Demographics",
                            Description = "Kindly fill your legal name and other demographic details.",
                            IsActive = false,
                            IsRequired = false,
                            Name = "Patient Demographics screen",
                            Order = 0L
                        },
                        new
                        {
                            Id = 5L,
                            Content = "Insurance Coverage",
                            Description = "Do you have/had any health insurance? If yes, let us know your insurance details.",
                            IsActive = false,
                            IsRequired = false,
                            Name = "Insurance screen",
                            Order = 0L
                        },
                        new
                        {
                            Id = 6L,
                            Content = "Household Members",
                            Description = "Let us know the total number of members in your household.",
                            IsActive = false,
                            IsRequired = false,
                            Name = "Household Members screen",
                            Order = 0L
                        },
                        new
                        {
                            Id = 7L,
                            Content = "Household Income & Resources",
                            Description = "Let us know the total income & resources of your household. It includes the income & resources of your & your household members also.",
                            IsActive = false,
                            IsRequired = false,
                            Name = "Household Income & Resource screen",
                            Order = 0L
                        },
                        new
                        {
                            Id = 8L,
                            Content = "General Information",
                            Description = "Kindly answer few questions to help you better. The questions includes on your health conditions.",
                            IsActive = false,
                            IsRequired = false,
                            Name = "General Information screen",
                            Order = 0L
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.ScreenQuestionMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QuestionId")
                        .HasColumnType("bigint");

                    b.Property<long>("ScreenId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ScreenQuestionMapping");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            KeyName = "patient",
                            QuestionId = 1L,
                            ScreenId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            KeyName = "zipCode",
                            QuestionId = 2L,
                            ScreenId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            KeyName = "city",
                            QuestionId = 3L,
                            ScreenId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            KeyName = "state",
                            QuestionId = 4L,
                            ScreenId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            KeyName = "citizenshipStatus",
                            QuestionId = 5L,
                            ScreenId = 3L
                        },
                        new
                        {
                            Id = 6L,
                            KeyName = "firstName",
                            QuestionId = 7L,
                            ScreenId = 4L
                        },
                        new
                        {
                            Id = 7L,
                            KeyName = "lastName",
                            QuestionId = 8L,
                            ScreenId = 4L
                        },
                        new
                        {
                            Id = 8L,
                            KeyName = "dateOfBirth",
                            QuestionId = 9L,
                            ScreenId = 4L
                        },
                        new
                        {
                            Id = 9L,
                            KeyName = "gender",
                            QuestionId = 10L,
                            ScreenId = 4L
                        },
                        new
                        {
                            Id = 10L,
                            KeyName = "maritalStatus",
                            QuestionId = 11L,
                            ScreenId = 4L
                        },
                        new
                        {
                            Id = 11L,
                            KeyName = "email",
                            QuestionId = 12L,
                            ScreenId = 4L
                        },
                        new
                        {
                            Id = 12L,
                            KeyName = "cellNumber",
                            QuestionId = 13L,
                            ScreenId = 4L
                        },
                        new
                        {
                            Id = 13L,
                            KeyName = "insurance",
                            QuestionId = 14L,
                            ScreenId = 5L
                        },
                        new
                        {
                            Id = 14L,
                            KeyName = "policyDetails",
                            QuestionId = 15L,
                            ScreenId = 5L
                        },
                        new
                        {
                            Id = 15L,
                            KeyName = "payerName",
                            QuestionId = 16L,
                            ScreenId = 5L
                        },
                        new
                        {
                            Id = 16L,
                            KeyName = "groupName",
                            QuestionId = 17L,
                            ScreenId = 5L
                        },
                        new
                        {
                            Id = 17L,
                            KeyName = "groupNumber",
                            QuestionId = 18L,
                            ScreenId = 5L
                        },
                        new
                        {
                            Id = 18L,
                            KeyName = "policyNumber",
                            QuestionId = 19L,
                            ScreenId = 5L
                        },
                        new
                        {
                            Id = 19L,
                            KeyName = "effectiveFrom",
                            QuestionId = 20L,
                            ScreenId = 5L
                        },
                        new
                        {
                            Id = 20L,
                            KeyName = "termination",
                            QuestionId = 21L,
                            ScreenId = 5L
                        },
                        new
                        {
                            Id = 21L,
                            QuestionId = 22L,
                            ScreenId = 6L
                        },
                        new
                        {
                            Id = 22L,
                            KeyName = "noOfHousehold",
                            QuestionId = 23L,
                            ScreenId = 6L
                        },
                        new
                        {
                            Id = 23L,
                            KeyName = "minorChildren",
                            QuestionId = 24L,
                            ScreenId = 6L
                        },
                        new
                        {
                            Id = 24L,
                            KeyName = "isEmployed",
                            QuestionId = 25L,
                            ScreenId = 6L
                        },
                        new
                        {
                            Id = 25L,
                            KeyName = "isHouseholdEmployed",
                            QuestionId = 26L,
                            ScreenId = 6L
                        },
                        new
                        {
                            Id = 26L,
                            KeyName = "programServices",
                            QuestionId = 27L,
                            ScreenId = 6L
                        },
                        new
                        {
                            Id = 27L,
                            QuestionId = 28L,
                            ScreenId = 7L
                        },
                        new
                        {
                            Id = 28L,
                            KeyName = "householdIncome",
                            QuestionId = 29L,
                            ScreenId = 7L
                        },
                        new
                        {
                            Id = 29L,
                            KeyName = "incomePayPeriod",
                            QuestionId = 30L,
                            ScreenId = 7L
                        },
                        new
                        {
                            Id = 30L,
                            KeyName = "householdResources",
                            QuestionId = 31L,
                            ScreenId = 7L
                        },
                        new
                        {
                            Id = 31L,
                            KeyName = "serviceProgram",
                            QuestionId = 32L,
                            ScreenId = 8L
                        },
                        new
                        {
                            Id = 32L,
                            KeyName = "healthConditiion",
                            QuestionId = 33L,
                            ScreenId = 8L
                        },
                        new
                        {
                            Id = 33L,
                            KeyName = "beenInjured",
                            QuestionId = 34L,
                            ScreenId = 8L
                        },
                        new
                        {
                            Id = 34L,
                            KeyName = "reportFiledCrime",
                            QuestionId = 35L,
                            ScreenId = 8L
                        },
                        new
                        {
                            Id = 35L,
                            KeyName = "aboutYourself",
                            QuestionId = 6L,
                            ScreenId = 4L
                        },
                        new
                        {
                            Id = 36L,
                            KeyName = "reportFiledMotor",
                            QuestionId = 36L,
                            ScreenId = 8L
                        },
                        new
                        {
                            Id = 37L,
                            KeyName = "reportFiledJob",
                            QuestionId = 37L,
                            ScreenId = 8L
                        },
                        new
                        {
                            Id = 38L,
                            KeyName = "serviceProgram",
                            QuestionId = 38L,
                            ScreenId = 8L
                        },
                        new
                        {
                            Id = 39L,
                            KeyName = "healthConditiion",
                            QuestionId = 39L,
                            ScreenId = 8L
                        },
                        new
                        {
                            Id = 40L,
                            KeyName = "beenInjured",
                            QuestionId = 40L,
                            ScreenId = 8L
                        },
                        new
                        {
                            Id = 41L,
                            KeyName = "reportFiledCrime",
                            QuestionId = 41L,
                            ScreenId = 8L
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.TabCompletionStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsAddressVerificationComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsApplicationFormsComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsCellVerificationComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsContactPreferenceComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsEmailVerificationComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGuarantorBasicInfoComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGuarantorHomeComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsGuarantorWorkComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHouseholdComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIdVerificationComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncomeVerificationComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOtherVerificationComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPersonalBasicInfoComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPersonalHomeComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPersonalWorkComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProgramsComplete")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsQuickAssessmentComplete")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.ToTable("TabCompletionStatus");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.TenantDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TenantDetails");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "5554442341",
                            TenantName = "Tenant 1"
                        },
                        new
                        {
                            Id = 2L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PhoneNumber = "6663432341",
                            TenantName = "Tenant 2"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.UserLoginHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoOfAttempts")
                        .HasColumnType("int");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserLoginHistory");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.UserVerification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoOfClicks")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TokenCreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TokenExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserVerification");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Validators", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Max")
                        .HasColumnType("int");

                    b.Property<int>("MaxLength")
                        .HasColumnType("int");

                    b.Property<int?>("Min")
                        .HasColumnType("int");

                    b.Property<int>("MinLength")
                        .HasColumnType("int");

                    b.Property<long?>("PatternId")
                        .HasColumnType("bigint");

                    b.Property<long?>("QuickAssessmentQuestionsId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Required")
                        .HasColumnType("bit");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PatternId");

                    b.HasIndex("QuickAssessmentQuestionsId");

                    b.ToTable("Validators");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 5000,
                            MinLength = 2,
                            QuickAssessmentQuestionsId = 1L,
                            Required = true
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 5,
                            MinLength = 5,
                            PatternId = 1L,
                            QuickAssessmentQuestionsId = 2L,
                            Required = true
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            PatternId = 4L,
                            QuickAssessmentQuestionsId = 3L,
                            Required = false
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            PatternId = 4L,
                            QuickAssessmentQuestionsId = 4L,
                            Required = false
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 500,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 5L,
                            Required = true
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 50,
                            MinLength = 2,
                            PatternId = 4L,
                            QuickAssessmentQuestionsId = 6L,
                            Required = true
                        },
                        new
                        {
                            Id = 7L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 50,
                            MinLength = 0,
                            PatternId = 4L,
                            QuickAssessmentQuestionsId = 7L,
                            Required = true
                        },
                        new
                        {
                            Id = 8L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 10,
                            MinLength = 10,
                            QuickAssessmentQuestionsId = 8L,
                            Required = true
                        },
                        new
                        {
                            Id = 9L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 9L,
                            Required = true
                        },
                        new
                        {
                            Id = 10L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 10L,
                            Required = true
                        },
                        new
                        {
                            Id = 11L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 100,
                            MinLength = 0,
                            PatternId = 3L,
                            QuickAssessmentQuestionsId = 11L,
                            Required = true
                        },
                        new
                        {
                            Id = 12L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 50,
                            MinLength = 10,
                            QuickAssessmentQuestionsId = 12L,
                            Required = true
                        },
                        new
                        {
                            Id = 13L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 50,
                            MinLength = 2,
                            QuickAssessmentQuestionsId = 13L,
                            Required = true
                        },
                        new
                        {
                            Id = 14L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 50,
                            MinLength = 2,
                            PatternId = 4L,
                            QuickAssessmentQuestionsId = 14L,
                            Required = true
                        },
                        new
                        {
                            Id = 15L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 50,
                            MinLength = 2,
                            PatternId = 4L,
                            QuickAssessmentQuestionsId = 15L,
                            Required = true
                        },
                        new
                        {
                            Id = 16L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 25,
                            MinLength = 10,
                            PatternId = 5L,
                            QuickAssessmentQuestionsId = 16L,
                            Required = true
                        },
                        new
                        {
                            Id = 17L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 15,
                            MinLength = 10,
                            PatternId = 5L,
                            QuickAssessmentQuestionsId = 17L,
                            Required = true
                        },
                        new
                        {
                            Id = 18L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 10,
                            MinLength = 10,
                            PatternId = 10L,
                            QuickAssessmentQuestionsId = 18L,
                            Required = true
                        },
                        new
                        {
                            Id = 19L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 10,
                            MinLength = 10,
                            PatternId = 10L,
                            QuickAssessmentQuestionsId = 19L,
                            Required = false
                        },
                        new
                        {
                            Id = 20L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 20L,
                            Required = true
                        },
                        new
                        {
                            Id = 21L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 21L,
                            Required = true
                        },
                        new
                        {
                            Id = 22L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 22L,
                            Required = true
                        },
                        new
                        {
                            Id = 23L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 23L,
                            Required = true
                        },
                        new
                        {
                            Id = 24L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 24L,
                            Required = false
                        },
                        new
                        {
                            Id = 25L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Max = 50000,
                            MaxLength = 1000,
                            MinLength = 0,
                            PatternId = 2L,
                            QuickAssessmentQuestionsId = 25L,
                            Required = true
                        },
                        new
                        {
                            Id = 26L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 26L,
                            Required = true
                        },
                        new
                        {
                            Id = 27L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Max = 50000,
                            MaxLength = 1000,
                            MinLength = 0,
                            PatternId = 2L,
                            QuickAssessmentQuestionsId = 27L,
                            Required = true
                        },
                        new
                        {
                            Id = 28L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 28L,
                            Required = false
                        },
                        new
                        {
                            Id = 29L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 29L,
                            Required = false
                        },
                        new
                        {
                            Id = 30L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 30L,
                            Required = false
                        },
                        new
                        {
                            Id = 31L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 31L,
                            Required = false
                        },
                        new
                        {
                            Id = 32L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 9,
                            MinLength = 9,
                            QuickAssessmentQuestionsId = 32L,
                            Required = true
                        },
                        new
                        {
                            Id = 33L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 34L,
                            Required = false
                        },
                        new
                        {
                            Id = 34L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 1000,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 35L,
                            Required = false
                        },
                        new
                        {
                            Id = 35L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLength = 0,
                            MinLength = 0,
                            QuickAssessmentQuestionsId = 33L,
                            Required = true
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.VerificationDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AddressVerification")
                        .HasColumnType("bigint");

                    b.Property<long?>("AssessmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IdVerification")
                        .HasColumnType("bigint");

                    b.Property<long?>("OtherVerification")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AssessmentId");

                    b.ToTable("VerificationDocument");
                });

            modelBuilder.Entity("Healthware.Core.Entities.ContactDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ContactTypeDetailsId")
                        .HasColumnType("bigint");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactTypeDetailsId");

                    b.ToTable("ContactDetails");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Cell = "1111111111",
                            ContactTypeDetailsId = 9L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dummy",
                            Name = "Dummy"
                        },
                        new
                        {
                            Id = 2L,
                            Cell = "2222222222",
                            ContactTypeDetailsId = 9L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "naresh.k@zucisystems.com",
                            Name = "Naresh Kumar"
                        },
                        new
                        {
                            Id = 3L,
                            Cell = "3333333333",
                            ContactTypeDetailsId = 9L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "iniya.j@zucisystems.com",
                            Name = "Iniya J"
                        },
                        new
                        {
                            Id = 4L,
                            Cell = "3333333333",
                            ContactTypeDetailsId = 9L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dkucherina@healthwaresystems.com",
                            Name = "Dimitriy Kucherina"
                        },
                        new
                        {
                            Id = 5L,
                            Cell = "3333333333",
                            ContactTypeDetailsId = 9L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "psubbaraman@healthwaresystems.com",
                            Name = "Subba Raman"
                        },
                        new
                        {
                            Id = 6L,
                            Cell = "3333333333",
                            ContactTypeDetailsId = 9L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sgruner@healthwaresystems.com",
                            Name = "Stephen Gruner"
                        },
                        new
                        {
                            Id = 7L,
                            Cell = "3333333333",
                            ContactTypeDetailsId = 9L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jkunwar@healthwaresystems.com",
                            Name = "Jay Kunwar"
                        });
                });

            modelBuilder.Entity("Healthware.Core.Entities.ContactTypeMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContactTypeMaster");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ContactType = "Basic",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityType = "Self"
                        },
                        new
                        {
                            Id = 2L,
                            ContactType = "Home",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityType = "Self"
                        },
                        new
                        {
                            Id = 3L,
                            ContactType = "Work",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityType = "Self"
                        },
                        new
                        {
                            Id = 4L,
                            ContactType = "Basic",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityType = "Guarantor"
                        },
                        new
                        {
                            Id = 5L,
                            ContactType = "Home",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityType = "Guarantor"
                        },
                        new
                        {
                            Id = 6L,
                            ContactType = "Work",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityType = "Guarantor"
                        },
                        new
                        {
                            Id = 7L,
                            ContactType = "Work",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityType = "Household Member"
                        },
                        new
                        {
                            Id = 8L,
                            ContactType = "Other",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityType = "Other"
                        },
                        new
                        {
                            Id = 9L,
                            ContactType = "Home",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityType = "User Profile"
                        });
                });

            modelBuilder.Entity("Healthware.Core.Entities.JournalEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrentValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityProperty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JournalEntries");
                });

            modelBuilder.Entity("Healthware.Core.Entities.MainUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ContactDetailsId")
                        .HasColumnType("bigint");

                    b.Property<string>("CountyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAuthenticated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTokenConsumed")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LoginOTPUpdatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtpNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSNNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContactDetailsId");

                    b.ToTable("MainUser");

                    b.HasDiscriminator<string>("Discriminator").HasValue("MainUser");
                });

            modelBuilder.Entity("Healthware.Core.Entities.Permission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "ViewAddress"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "CreateAddress"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "UpdateAddress"
                        },
                        new
                        {
                            Id = 4L,
                            Name = "DeleteAddress"
                        },
                        new
                        {
                            Id = 5L,
                            Name = "ViewUser"
                        },
                        new
                        {
                            Id = 6L,
                            Name = "UpdateUser"
                        },
                        new
                        {
                            Id = 7L,
                            Name = "ViewPatientDashboard"
                        },
                        new
                        {
                            Id = 8L,
                            Name = "ViewAdvocateDashboard"
                        },
                        new
                        {
                            Id = 9L,
                            Name = "ViewComponentAssessmentSummary"
                        },
                        new
                        {
                            Id = 10L,
                            Name = "ViewDashboardInfo"
                        },
                        new
                        {
                            Id = 11L,
                            Name = "ViewReviewNotes"
                        },
                        new
                        {
                            Id = 12L,
                            Name = "CreateReviewNotes"
                        },
                        new
                        {
                            Id = 13L,
                            Name = "ViewPatient"
                        },
                        new
                        {
                            Id = 14L,
                            Name = "CreatePatient"
                        },
                        new
                        {
                            Id = 15L,
                            Name = "UpdatePatient"
                        },
                        new
                        {
                            Id = 16L,
                            Name = "ViewGuarantor"
                        },
                        new
                        {
                            Id = 17L,
                            Name = "CreateGuarantor"
                        },
                        new
                        {
                            Id = 18L,
                            Name = "UpdateGuarantor"
                        },
                        new
                        {
                            Id = 19L,
                            Name = "ViewContactPreference"
                        },
                        new
                        {
                            Id = 20L,
                            Name = "CreateContactPreference"
                        },
                        new
                        {
                            Id = 21L,
                            Name = "UpdateContactPreference"
                        },
                        new
                        {
                            Id = 22L,
                            Name = "CreateAssessmentByAdvocate"
                        },
                        new
                        {
                            Id = 23L,
                            Name = "ViewAssessment"
                        },
                        new
                        {
                            Id = 24L,
                            Name = "CreateAssessment"
                        },
                        new
                        {
                            Id = 25L,
                            Name = "UpdateAssessment"
                        },
                        new
                        {
                            Id = 26L,
                            Name = "DeleteAssessment"
                        },
                        new
                        {
                            Id = 27L,
                            Name = "CreateAccount"
                        },
                        new
                        {
                            Id = 28L,
                            Name = "ViewAccount"
                        },
                        new
                        {
                            Id = 29L,
                            Name = "ViewProgram"
                        },
                        new
                        {
                            Id = 30L,
                            Name = "CreateProgram"
                        },
                        new
                        {
                            Id = 31L,
                            Name = "DeleteProgram"
                        },
                        new
                        {
                            Id = 32L,
                            Name = "UpdateProgram"
                        },
                        new
                        {
                            Id = 33L,
                            Name = "UpdateProfile"
                        },
                        new
                        {
                            Id = 34L,
                            Name = "ViewProfile"
                        },
                        new
                        {
                            Id = 35L,
                            Name = "CreateProfile"
                        },
                        new
                        {
                            Id = 36L,
                            Name = "DeleteProfile"
                        },
                        new
                        {
                            Id = 37L,
                            Name = "ViewPatientSSN"
                        },
                        new
                        {
                            Id = 38L,
                            Name = "ViewPaymentOptions"
                        },
                        new
                        {
                            Id = 39L,
                            Name = "ViewGeneralInformation"
                        },
                        new
                        {
                            Id = 40L,
                            Name = "ViewInsuranceCoverage"
                        },
                        new
                        {
                            Id = 41L,
                            Name = "ViewPatientDemographics"
                        },
                        new
                        {
                            Id = 42L,
                            Name = "ViewCitizenshipStatus"
                        },
                        new
                        {
                            Id = 43L,
                            Name = "ViewResidentialInformation"
                        },
                        new
                        {
                            Id = 44L,
                            Name = "ViewHouseHoldMember"
                        },
                        new
                        {
                            Id = 45L,
                            Name = "ViewHouseholdIncomeResource"
                        },
                        new
                        {
                            Id = 46L,
                            Name = "AdvocateQuickAssessment"
                        },
                        new
                        {
                            Id = 47L,
                            Name = "CreateDynamicAssessment"
                        },
                        new
                        {
                            Id = 48L,
                            Name = "CreatePatientAccount"
                        },
                        new
                        {
                            Id = 49L,
                            Name = "ViewComponentQuickAssessment"
                        },
                        new
                        {
                            Id = 50L,
                            Name = "ViewComponentPersonal"
                        },
                        new
                        {
                            Id = 51L,
                            Name = "ViewComponentGuarantor"
                        },
                        new
                        {
                            Id = 52L,
                            Name = "ViewComponentContactPreference"
                        },
                        new
                        {
                            Id = 53L,
                            Name = "ViewComponentHouseHold"
                        },
                        new
                        {
                            Id = 54L,
                            Name = "ViewComponentPrograms"
                        },
                        new
                        {
                            Id = 55L,
                            Name = "ViewComponentForms"
                        },
                        new
                        {
                            Id = 56L,
                            Name = "ViewComponentVerification"
                        },
                        new
                        {
                            Id = 57L,
                            Name = "ViewComponentApplicationForms"
                        },
                        new
                        {
                            Id = 58L,
                            Name = "ViewComponentPersonalBasicInfo"
                        },
                        new
                        {
                            Id = 59L,
                            Name = "ViewComponentPersonalHomeAddress"
                        },
                        new
                        {
                            Id = 60L,
                            Name = "ViewComponentPersonalWorkAddress"
                        },
                        new
                        {
                            Id = 61L,
                            Name = "ViewComponentGuarantorBasicInfo"
                        },
                        new
                        {
                            Id = 62L,
                            Name = "ViewComponentGuarantorHomeAddress"
                        },
                        new
                        {
                            Id = 63L,
                            Name = "ViewComponentGuarantorWorkAddress"
                        },
                        new
                        {
                            Id = 64L,
                            Name = "ViewComponentHouseHoldMemberList"
                        },
                        new
                        {
                            Id = 65L,
                            Name = "ViewComponentEditHouseHoldMember"
                        },
                        new
                        {
                            Id = 66L,
                            Name = "ViewProgramsInformation"
                        },
                        new
                        {
                            Id = 67L,
                            Name = "ViewComponentReviewNotes"
                        },
                        new
                        {
                            Id = 68L,
                            Name = "ViewComponentEmailVerification"
                        },
                        new
                        {
                            Id = 69L,
                            Name = "ViewComponentCellVerification"
                        },
                        new
                        {
                            Id = 70L,
                            Name = "ViewComponentIdVerification"
                        },
                        new
                        {
                            Id = 71L,
                            Name = "ViewComponentAddressVerification"
                        },
                        new
                        {
                            Id = 72L,
                            Name = "ViewComponentIncomeVerification"
                        },
                        new
                        {
                            Id = 73L,
                            Name = "ViewComponentOtherDocumentation"
                        },
                        new
                        {
                            Id = 74L,
                            Name = "EditQuickAssessmentResult"
                        },
                        new
                        {
                            Id = 75L,
                            Name = "ViewEsignAssessment"
                        },
                        new
                        {
                            Id = 76L,
                            Name = "ViewShareAssessment"
                        },
                        new
                        {
                            Id = 77L,
                            Name = "ViewDownloadAssessment"
                        },
                        new
                        {
                            Id = 78L,
                            Name = "ViewUploadAssessment"
                        },
                        new
                        {
                            Id = 79L,
                            Name = "EditTheme"
                        },
                        new
                        {
                            Id = 80L,
                            Name = "UpdatePassword"
                        },
                        new
                        {
                            Id = 81L,
                            Name = "ViewComponentApplicationCompleted"
                        });
                });

            modelBuilder.Entity("Healthware.Core.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            RoleName = "Patient"
                        },
                        new
                        {
                            Id = 2L,
                            RoleName = "Advocate"
                        });
                });

            modelBuilder.Entity("Healthware.Core.Entities.RolesPermission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("PermissionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            PermissionId = 7L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            PermissionId = 12L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            PermissionId = 13L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            PermissionId = 14L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            PermissionId = 15L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            PermissionId = 16L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            PermissionId = 17L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            PermissionId = 18L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            PermissionId = 19L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            PermissionId = 20L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            PermissionId = 24L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            PermissionId = 1L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            PermissionId = 2L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            PermissionId = 3L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 15L,
                            PermissionId = 8L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 16L,
                            PermissionId = 9L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 17L,
                            PermissionId = 10L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 18L,
                            PermissionId = 11L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 19L,
                            PermissionId = 12L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 20L,
                            PermissionId = 13L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 21L,
                            PermissionId = 14L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 22L,
                            PermissionId = 15L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 23L,
                            PermissionId = 16L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 24L,
                            PermissionId = 17L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 25L,
                            PermissionId = 18L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 26L,
                            PermissionId = 19L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 27L,
                            PermissionId = 20L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 28L,
                            PermissionId = 24L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 29L,
                            PermissionId = 1L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 30L,
                            PermissionId = 2L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 31L,
                            PermissionId = 3L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 32L,
                            PermissionId = 46L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 33L,
                            PermissionId = 10L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 34L,
                            PermissionId = 39L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 35L,
                            PermissionId = 40L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 36L,
                            PermissionId = 41L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 37L,
                            PermissionId = 42L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 38L,
                            PermissionId = 43L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 39L,
                            PermissionId = 44L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 40L,
                            PermissionId = 38L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 41L,
                            PermissionId = 36L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 42L,
                            PermissionId = 37L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 43L,
                            PermissionId = 37L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 44L,
                            PermissionId = 33L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 45L,
                            PermissionId = 33L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 46L,
                            PermissionId = 23L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 47L,
                            PermissionId = 28L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 48L,
                            PermissionId = 29L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 49L,
                            PermissionId = 45L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 50L,
                            PermissionId = 47L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 51L,
                            PermissionId = 48L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 52L,
                            PermissionId = 48L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 53L,
                            PermissionId = 49L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 54L,
                            PermissionId = 49L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 55L,
                            PermissionId = 50L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 56L,
                            PermissionId = 50L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 57L,
                            PermissionId = 51L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 58L,
                            PermissionId = 51L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 59L,
                            PermissionId = 52L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 60L,
                            PermissionId = 52L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 61L,
                            PermissionId = 53L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 62L,
                            PermissionId = 54L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 63L,
                            PermissionId = 55L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 64L,
                            PermissionId = 55L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 65L,
                            PermissionId = 56L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 66L,
                            PermissionId = 57L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 67L,
                            PermissionId = 58L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 68L,
                            PermissionId = 58L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 69L,
                            PermissionId = 59L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 70L,
                            PermissionId = 59L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 71L,
                            PermissionId = 60L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 72L,
                            PermissionId = 60L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 73L,
                            PermissionId = 61L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 74L,
                            PermissionId = 61L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 75L,
                            PermissionId = 62L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 76L,
                            PermissionId = 62L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 77L,
                            PermissionId = 63L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 78L,
                            PermissionId = 63L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 79L,
                            PermissionId = 64L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 80L,
                            PermissionId = 64L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 81L,
                            PermissionId = 65L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 82L,
                            PermissionId = 65L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 83L,
                            PermissionId = 66L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 84L,
                            PermissionId = 66L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 85L,
                            PermissionId = 67L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 86L,
                            PermissionId = 67L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 87L,
                            PermissionId = 68L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 88L,
                            PermissionId = 68L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 89L,
                            PermissionId = 69L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 90L,
                            PermissionId = 69L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 91L,
                            PermissionId = 70L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 92L,
                            PermissionId = 70L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 93L,
                            PermissionId = 71L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 94L,
                            PermissionId = 71L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 95L,
                            PermissionId = 72L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 96L,
                            PermissionId = 72L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 97L,
                            PermissionId = 25L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 98L,
                            PermissionId = 73L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 99L,
                            PermissionId = 73L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 100L,
                            PermissionId = 74L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 101L,
                            PermissionId = 74L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 102L,
                            PermissionId = 75L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 103L,
                            PermissionId = 75L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 104L,
                            PermissionId = 76L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 105L,
                            PermissionId = 76L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 106L,
                            PermissionId = 77L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 107L,
                            PermissionId = 77L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 108L,
                            PermissionId = 78L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 109L,
                            PermissionId = 78L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 110L,
                            PermissionId = 79L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 111L,
                            PermissionId = 79L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 112L,
                            PermissionId = 22L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 113L,
                            PermissionId = 34L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 114L,
                            PermissionId = 34L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 115L,
                            PermissionId = 26L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 116L,
                            PermissionId = 26L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 117L,
                            PermissionId = 45L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 118L,
                            PermissionId = 29L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 119L,
                            PermissionId = 25L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 120L,
                            PermissionId = 53L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 121L,
                            PermissionId = 21L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 122L,
                            PermissionId = 21L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 123L,
                            PermissionId = 81L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 124L,
                            PermissionId = 80L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 125L,
                            PermissionId = 80L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 126L,
                            PermissionId = 56L,
                            RoleId = 2L
                        });
                });

            modelBuilder.Entity("Healthware.Core.Entities.ServiceAuditTrail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Request")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ServiceAuditTrails");
                });

            modelBuilder.Entity("Healthware.Core.Entities.SessionActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastLoggedInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SessionStartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SessionActivity");
                });

            modelBuilder.Entity("Healthware.Core.Entities.UserHasRoles", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserHasRoles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            RoleId = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            RoleId = 2L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            RoleId = 1L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            RoleId = 2L,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            RoleId = 1L,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 6L,
                            RoleId = 2L,
                            UserId = 6L
                        });
                });

            modelBuilder.Entity("Healthware.Core.MultiTenancy.Entities.SubDomainMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SubDomain")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubDomainMaster");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            SubDomain = "activeassist-qa.zucisystems.com:8090",
                            TenantId = "1"
                        },
                        new
                        {
                            Id = 2L,
                            SubDomain = "localhost:4200",
                            TenantId = "2"
                        });
                });

            modelBuilder.Entity("Healthware.Core.MultiTenancy.Entities.User", b =>
                {
                    b.HasBaseType("Healthware.Core.Entities.MainUser");

                    b.Property<string>("TenantId")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("User");

                    b.HasData(
                        new
                        {
                            Id = -1L,
                            CanChangePassword = false,
                            Cell = "1111111111",
                            ContactDetailsId = 1L,
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "dummy",
                            IsActive = true,
                            IsAuthenticated = false,
                            IsTokenConsumed = false,
                            Password = "$2a$12$BMybSyMuhQBQFWYsvnVY4.2Zlz0h29LnoCemIsuUkFNZAy5vu/HI2"
                        },
                        new
                        {
                            Id = 1L,
                            CanChangePassword = false,
                            Cell = "2222222222",
                            ContactDetailsId = 2L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "naresh.k@zucisystems.com",
                            FirstName = "Naresh",
                            Gender = "Male",
                            IsActive = true,
                            IsAuthenticated = false,
                            IsTokenConsumed = false,
                            LastName = "Kumar",
                            MaritalStatus = "Single",
                            Password = "$2a$12$DfcY1qQWrM42xvT71cYMteg0M59wkX1eh3OsUEqWr5W04Ee1zD1B.",
                            SSNNumber = "212128812"
                        },
                        new
                        {
                            Id = 2L,
                            CanChangePassword = false,
                            Cell = "3333333333",
                            ContactDetailsId = 3L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "iniya.j@zucisystems.com",
                            FirstName = "Iniya",
                            Gender = "Female",
                            IsActive = true,
                            IsAuthenticated = false,
                            IsTokenConsumed = false,
                            LastName = "J",
                            MaritalStatus = "Married",
                            Password = "$2a$12$qYrHzI4aJBzSMun99S0/z.HlDEfoM83IQPIowzA9y2Au1VAVURoCe",
                            SSNNumber = "212127744"
                        },
                        new
                        {
                            Id = 3L,
                            CanChangePassword = false,
                            Cell = "9998789876",
                            ContactDetailsId = 4L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "dkucherina@healthwaresystems.com",
                            FirstName = "Dimitriy",
                            Gender = "Male",
                            IsActive = true,
                            IsAuthenticated = false,
                            IsTokenConsumed = false,
                            LastName = "Kucherina",
                            MaritalStatus = "Single",
                            Password = "$2a$12$LH.qp23zltZgbyHvT6Ve2.xJlsTTxY/8naYCRDkZbfyvvxkQuSp2S",
                            SSNNumber = "212127766"
                        },
                        new
                        {
                            Id = 4L,
                            CanChangePassword = false,
                            Cell = "9998789876",
                            ContactDetailsId = 5L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "psubbaraman@healthwaresystems.com",
                            FirstName = "Subba",
                            Gender = "Male",
                            IsActive = true,
                            IsAuthenticated = false,
                            IsTokenConsumed = false,
                            LastName = "Raman",
                            MaritalStatus = "Single",
                            Password = "$2a$12$16HOZopNss75du5mt95LvOqz5F0y.pDvRqEZxSQw1Rtc5EtQOCrDi",
                            SSNNumber = "212127788"
                        },
                        new
                        {
                            Id = 5L,
                            CanChangePassword = false,
                            Cell = "9998789876",
                            ContactDetailsId = 6L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "jkunwar@healthwaresystems.com",
                            FirstName = "Jay",
                            Gender = "Male",
                            IsActive = true,
                            IsAuthenticated = false,
                            IsTokenConsumed = false,
                            LastName = "Kunwar",
                            MaritalStatus = "Single",
                            Password = "$2a$12$fn0Jky/lNIR2i1gvndLNaunLQZ9JvIFFrttYmCONJgOpQKH6ntoc.",
                            SSNNumber = "212127724"
                        },
                        new
                        {
                            Id = 6L,
                            CanChangePassword = false,
                            Cell = "9998789876",
                            ContactDetailsId = 7L,
                            CountyCode = "1",
                            CreatedDate = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfBirth = new DateTime(1996, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EmailAddress = "sgruner@healthwaresystems.com",
                            FirstName = "Stephen",
                            Gender = "Male",
                            IsActive = true,
                            IsAuthenticated = false,
                            IsTokenConsumed = false,
                            LastName = "Gruner",
                            MaritalStatus = "Single",
                            Password = "$2a$12$sGupu6jvuESUnoUse//BmeSx3QVrteT8Hpt24r6QA9id/Hmlhbz4m",
                            SSNNumber = "212126682"
                        });
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Assessment", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.AssessmentStatusMaster", "AssessmentStatusMaster")
                        .WithMany()
                        .HasForeignKey("AssessmentStatusMasterId");

                    b.Navigation("AssessmentStatusMaster");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.AssessmentVerification", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.Navigation("Assessment");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.BasicInfo", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.Navigation("Assessment");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Document", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.HasOne("HealthWare.ActiveASSIST.Entities.DocumentTypeMaster", "DocumentTypeMaster")
                        .WithMany()
                        .HasForeignKey("DocumentTypeMasterId");

                    b.Navigation("Assessment");

                    b.Navigation("DocumentTypeMaster");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DocumentCategoryDocumentTypeMapping", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.DocumentCategoryMaster", "DocumentCategoryMaster")
                        .WithMany()
                        .HasForeignKey("DocumentCategoryMasterId");

                    b.HasOne("HealthWare.ActiveASSIST.Entities.DocumentTypeMaster", "DocumentTypeMaster")
                        .WithMany()
                        .HasForeignKey("DocumentTypeMasterId");

                    b.Navigation("DocumentCategoryMaster");

                    b.Navigation("DocumentTypeMaster");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DocumentProgramMapping", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("HealthWare.ActiveASSIST.Entities.ProgramDocument", "ProgramDocument")
                        .WithMany()
                        .HasForeignKey("ProgramDocumentId");

                    b.Navigation("Document");

                    b.Navigation("ProgramDocument");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Guarantor", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.Navigation("Assessment");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.HouseHoldMember", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.Navigation("Assessment");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.HouseHoldMemberIncome", b =>
                {
                    b.HasOne("Healthware.Core.Entities.ContactDetails", "ContactDetails")
                        .WithMany()
                        .HasForeignKey("ContactDetailsId");

                    b.HasOne("HealthWare.ActiveASSIST.Entities.HouseHoldMember", "HouseHoldMember")
                        .WithMany()
                        .HasForeignKey("HouseHoldMemberId");

                    b.Navigation("ContactDetails");

                    b.Navigation("HouseHoldMember");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.HouseHoldMemberResource", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.HouseHoldMember", "HouseHoldMember")
                        .WithMany()
                        .HasForeignKey("HouseHoldMemberId");

                    b.Navigation("HouseHoldMember");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.HouseholdMemberDocument", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.HasOne("HealthWare.ActiveASSIST.Entities.HouseHoldMember", "HouseholdMember")
                        .WithMany()
                        .HasForeignKey("HouseholdMemberId");

                    b.Navigation("Document");

                    b.Navigation("HouseholdMember");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Mappings.ScreenTenantMapping", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.DynamicScreens", "Screen")
                        .WithMany()
                        .HasForeignKey("ScreenId");

                    b.HasOne("HealthWare.ActiveASSIST.Entities.TenantDetails", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId");

                    b.Navigation("Screen");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Option", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.QuickAssessmentQuestions", null)
                        .WithMany("Options")
                        .HasForeignKey("QuickAssessmentQuestionsId");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.PatientProgramMapping", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.HasOne("HealthWare.ActiveASSIST.Entities.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId");

                    b.Navigation("Assessment");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.ProgramDocument", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Program", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramId");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Question", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Control", "Control")
                        .WithMany()
                        .HasForeignKey("ControlId");

                    b.Navigation("Control");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.QuickAssessmentQuestions", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.DynamicScreens", null)
                        .WithMany("Controls")
                        .HasForeignKey("DynamicScreensId");

                    b.HasOne("HealthWare.ActiveASSIST.Entities.FieldType", "FieldType")
                        .WithMany()
                        .HasForeignKey("FieldTypeId");

                    b.Navigation("FieldType");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.QuickAssessmentResult", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.Navigation("Assessment");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.ReviewNotes", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.Navigation("Assessment");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.TabCompletionStatus", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.Navigation("Assessment");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.UserLoginHistory", b =>
                {
                    b.HasOne("Healthware.Core.MultiTenancy.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.UserVerification", b =>
                {
                    b.HasOne("Healthware.Core.MultiTenancy.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.Validators", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.FieldValidatorType", "Pattern")
                        .WithMany()
                        .HasForeignKey("PatternId");

                    b.HasOne("HealthWare.ActiveASSIST.Entities.QuickAssessmentQuestions", null)
                        .WithMany("Validators")
                        .HasForeignKey("QuickAssessmentQuestionsId");

                    b.Navigation("Pattern");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.VerificationDocument", b =>
                {
                    b.HasOne("HealthWare.ActiveASSIST.Entities.Assessment", "Assessment")
                        .WithMany()
                        .HasForeignKey("AssessmentId");

                    b.Navigation("Assessment");
                });

            modelBuilder.Entity("Healthware.Core.Entities.ContactDetails", b =>
                {
                    b.HasOne("Healthware.Core.Entities.ContactTypeMaster", "ContactTypeDetails")
                        .WithMany()
                        .HasForeignKey("ContactTypeDetailsId");

                    b.Navigation("ContactTypeDetails");
                });

            modelBuilder.Entity("Healthware.Core.Entities.MainUser", b =>
                {
                    b.HasOne("Healthware.Core.Entities.ContactDetails", "ContactDetails")
                        .WithMany()
                        .HasForeignKey("ContactDetailsId");

                    b.Navigation("ContactDetails");
                });

            modelBuilder.Entity("Healthware.Core.Entities.RolesPermission", b =>
                {
                    b.HasOne("Healthware.Core.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId");

                    b.HasOne("Healthware.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Healthware.Core.Entities.SessionActivity", b =>
                {
                    b.HasOne("Healthware.Core.Entities.MainUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Healthware.Core.Entities.UserHasRoles", b =>
                {
                    b.HasOne("Healthware.Core.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Healthware.Core.Entities.MainUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.DynamicScreens", b =>
                {
                    b.Navigation("Controls");
                });

            modelBuilder.Entity("HealthWare.ActiveASSIST.Entities.QuickAssessmentQuestions", b =>
                {
                    b.Navigation("Options");

                    b.Navigation("Validators");
                });
#pragma warning restore 612, 618
        }
    }
}
